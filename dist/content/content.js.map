{"version":3,"file":"content.js","sources":["../../config/index.js","../../content/utils/error-handler.js","../../content/selection-detector.js","../../content/toolbox.js","../../content/unicode-factory.js","../../content/unicode-formatters.js","../../content/formatters/text-formatter.js","../../content/orchestrators/format-orchestrator.js","../../content/format-handler.js","../../content/content.js"],"sourcesContent":["// LinkedIn Formateur Toolbox - Configuration centralisée\n// Toute la configuration de l'extension en un seul endroit\n\n/**\n * Configuration principale de l'extension\n * Centralisée pour faciliter la maintenance et éviter les magic numbers\n */\nexport const CONFIG = {\n  \n  // ===============================\n  // FORMATS SUPPORTÉS\n  // ===============================\n  formats: {\n    // Liste des formatages supportés par l'extension\n    supported: ['bold', 'italic', 'underline', 'strikethrough'],\n    \n    // Configuration pour chaque format\n    definitions: {\n      bold: {\n        id: 'bold',\n        label: 'B',\n        tooltip: 'Gras',\n        className: 'ltf-font-bold',\n        shortcut: 'Ctrl+B'\n      },\n      italic: {\n        id: 'italic',\n        label: 'I',\n        tooltip: 'Italique',\n        className: 'ltf-italic',\n        shortcut: 'Ctrl+I'\n      },\n      underline: {\n        id: 'underline',\n        label: 'U',\n        tooltip: 'Souligné',\n        className: 'ltf-underline',\n        shortcut: 'Ctrl+U'\n      },\n      strikethrough: {\n        id: 'strikethrough',\n        label: 'S',\n        tooltip: 'Barré',\n        className: 'ltf-line-through',\n        shortcut: 'Ctrl+Shift+S'\n      }\n    }\n  },\n\n  // ===============================\n  // INTERFACE UTILISATEUR\n  // ===============================\n  ui: {\n    // Configuration de la toolbox flottante\n    toolbox: {\n      // Dimensions (calculées pour un centrage parfait)\n      width: 152, // 4×32 + 2×6 + 3×6 = 128 + 12 + 18 = 158px réduit à 152 pour plus de compacité\n      height: 40,\n      buttonSize: 32,\n      buttonSpacing: 6, // Augmenté pour meilleure symétrie\n      \n      // Positionnement\n      offsetTop: 10,\n      offsetBottom: 10,\n      offsetSides: 10,\n      \n      // Animations\n      animationDuration: 200,\n      fadeOutDuration: 150,\n      \n      // Styles\n      zIndex: 10000,\n      cssPrefix: 'ltf-',\n      \n      // Couleurs\n      colors: {\n        background: '#ffffff',\n        border: '#e1e5e9',\n        text: '#666666',\n        textHover: '#0a66c2',\n        backgroundHover: '#f3f2ef',\n        backgroundActive: '#e1e5e9'\n      },\n      \n      // Styles CSS\n      styles: {\n        borderRadius: '6px',\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08)',\n        fontFamily: '-apple-system, BlinkMacSystemFont, \\'Segoe UI\\', sans-serif',\n        fontSize: '14px',\n        fontWeight: '600'\n      }\n    },\n    \n    // Configuration des boutons\n    buttons: {\n      borderRadius: '4px',\n      transition: 'all 0.1s ease',\n      activeScale: 0.95,\n      clickFeedbackDuration: 100\n    }\n  },\n\n  // ===============================\n  // ÉVÉNEMENTS\n  // ===============================\n  events: {\n    linkedinNotification: ['input', 'change', 'keyup']\n  },\n\n  // ===============================\n  // DÉTECTION DE SÉLECTION\n  // ===============================\n  detection: {\n    // Délais et timing\n    debounceDelay: 200, // Augmenté pour les sélections longues\n    stabilizationDelay: 50, // Augmenté pour stabiliser les sélections multi-mots\n    \n    // Validation de sélection\n    minSelectionLength: 1,\n    maxSelectionLength: 10000,\n    \n    // Délais spécifiques pour les sélections multi-mots\n    multiWordStabilizationDelay: 100,\n    selectionProcessingDelay: 25,\n    \n    // Classes et attributs à exclure\n    excludeClasses: [\n      'ltf-extension',\n      'ltf-toolbox',\n      'linkedin-ads',\n      'ad-banner',\n      'sponsored-content'\n    ],\n    \n    // Attributs indiquant un champ en lecture seule\n    readOnlyAttributes: [\n      'readonly',\n      'disabled',\n      'aria-readonly'\n    ],\n    \n    // Sélecteurs CSS pour identifier les champs LinkedIn\n    linkedinSelectors: [\n      // Champs de création de posts\n      '[data-placeholder*=\"partager\"]',\n      '[data-placeholder*=\"What\\'s\"]',\n      '[data-placeholder*=\"share\"]',\n      '.ql-editor[contenteditable=\"true\"]',\n      '[role=\"textbox\"]',\n      \n      // Champs de commentaires\n      '[data-placeholder*=\"comment\"]',\n      '[data-placeholder*=\"Add a comment\"]',\n      '[data-placeholder*=\"commentaire\"]',\n      '.comments-comment-box__form textarea',\n      '.comments-comment-texteditor',\n      \n      // Messages privés\n      '[data-placeholder*=\"message\"]',\n      '[data-placeholder*=\"Write a message\"]',\n      '[data-placeholder*=\"Rédigez\"]',\n      '.msg-form__contenteditable',\n      '.msg-form__compose',\n      \n      // Champs de profil et autres\n      '[data-placeholder*=\"headline\"]',\n      '[data-placeholder*=\"summary\"]',\n      '[data-placeholder*=\"experience\"]',\n      'textarea[name*=\"summary\"]',\n      'textarea[name*=\"description\"]',\n      \n      // Sélecteurs génériques pour LinkedIn\n      'div[contenteditable=\"true\"]',\n      'textarea',\n      'input[type=\"text\"]',\n      '.editor-content',\n      '[data-editor=\"true\"]'\n    ],\n    \n    // Classes parentes LinkedIn pour validation de contexte\n    contextValidation: {\n      maxDepth: 10,\n      linkedinClasses: [\n        'feed-shared-update-v2',\n        'comments-comment-box',\n        'msg-form',\n        'artdeco-card',\n        'feed-shared-text',\n        'share-creation-state',\n        'editor-content'\n      ]\n    }\n  },\n\n  // ===============================\n  // PERFORMANCE\n  // ===============================\n  performance: {\n    // Timing critiques\n    maxContentScriptInjection: 100, // ms\n    maxToolboxAppearance: 50, // ms\n    maxMemoryUsage: 10, // MB\n    \n    // Optimisations\n    cleanupInterval: 30000, // 30 secondes\n    maxEventListeners: 50,\n    \n    // Débouncing\n    resizeDebounce: 250,\n    scrollDebounce: 100\n  },\n\n  // ===============================\n  // DÉVELOPPEMENT ET DEBUG\n  // ===============================\n  debug: {\n    // Activé seulement en mode développement\n    enabled: process.env.NODE_ENV === 'development',\n    \n    // Niveaux de log\n    logLevel: 'info', // 'debug', 'info', 'warn', 'error'\n    \n    // Métriques à tracker\n    trackMetrics: true,\n    \n    // Éléments à highlighter pour debug\n    highlightElements: false,\n    \n    // Préfixes pour les logs\n    logPrefix: '[LinkedIn Formateur]'\n  },\n\n  // ===============================\n  // SÉCURITÉ\n  // ===============================\n  security: {\n    // Domaines autorisés\n    allowedDomains: [\n      'linkedin.com',\n      '*.linkedin.com'\n    ],\n    \n    // Validation des entrées\n    maxInputLength: 50000,\n    \n    // Sanitization\n    allowedTags: [], // Pas de HTML dans les entrées\n    \n    // CSP\n    contentSecurityPolicy: {\n      'default-src': \"'self'\",\n      'script-src': \"'self' 'unsafe-inline'\",\n      'style-src': \"'self' 'unsafe-inline'\"\n    }\n  },\n\n  // ===============================\n  // CARACTÈRES UNICODE\n  // ===============================\n  unicode: {\n    // Caractères combining\n    combiningChars: {\n      underline: '\\u0332',\n      strikethrough: '\\u0336'\n    },\n    \n    // Ranges Unicode pour détection\n    ranges: {\n      // Mathematical Bold\n      bold: [\n        '\\u{1D400}-\\u{1D419}', // Majuscules\n        '\\u{1D41A}-\\u{1D433}', // Minuscules\n        '\\u{1D7CE}-\\u{1D7D7}'  // Chiffres\n      ],\n      \n      // Mathematical Sans-Serif Italic\n      italic: [\n        '\\u{1D608}-\\u{1D621}', // Majuscules\n        '\\u{1D622}-\\u{1D63B}'  // Minuscules\n      ],\n      \n      // Mathematical Monospace\n      monospace: [\n        '\\u{1D670}-\\u{1D689}', // Majuscules\n        '\\u{1D68A}-\\u{1D6A3}', // Minuscules\n        '\\u{1D7F6}-\\u{1D7FF}'  // Chiffres\n      ]\n    }\n  },\n\n  // ===============================\n  // MÉTADONNÉES\n  // ===============================\n  meta: {\n    version: '1.0.0',\n    name: 'LinkedIn Formateur Toolbox',\n    author: 'Sofiane Korbi',\n    description: 'Extension Chrome pour formater du texte directement sur LinkedIn',\n    \n    // URLs\n    homepage: 'https://github.com/sofiane-korbi/linkedin-formateur-toolbox',\n    repository: 'https://github.com/sofiane-korbi/linkedin-formateur-toolbox',\n    \n    // Compatibilité\n    chromeMinVersion: '88',\n    manifestVersion: 3,\n    \n    // Mise à jour\n    lastUpdated: new Date().toISOString(),\n    buildNumber: Date.now()\n  }\n};\n\n// ===============================\n// UTILITAIRES DE CONFIGURATION\n// ===============================\n\n/**\n * Récupère une valeur de configuration avec une valeur par défaut\n * @param {string} path - Chemin vers la configuration (ex: 'ui.toolbox.width')\n * @param {*} defaultValue - Valeur par défaut si non trouvée\n * @returns {*} - La valeur de configuration\n */\nexport function getConfig(path, defaultValue = null) {\n  const keys = path.split('.');\n  let current = CONFIG;\n  \n  for (const key of keys) {\n    if (current && typeof current === 'object' && key in current) {\n      current = current[key];\n    } else {\n      return defaultValue;\n    }\n  }\n  \n  return current;\n}\n\n/**\n * Valide si un domaine est autorisé\n * @param {string} domain - Le domaine à valider\n * @returns {boolean} - True si autorisé\n */\nexport function isDomainAllowed(domain) {\n  return CONFIG.security.allowedDomains.some(allowed => {\n    if (allowed.startsWith('*.')) {\n      return domain.endsWith(allowed.slice(2));\n    }\n    return domain === allowed;\n  });\n}\n\n/**\n * Génère les regex pour la détection Unicode\n * @returns {Object} - Objet avec les regex par type\n */\nexport function generateUnicodeRegex() {\n  const regex = {};\n  \n  Object.entries(CONFIG.unicode.ranges).forEach(([type, ranges]) => {\n    const rangePattern = ranges.map(range => `[${range}]`).join('|');\n    regex[type] = new RegExp(`(${rangePattern})`, 'u');\n  });\n  \n  return regex;\n}\n\n/**\n * Log avec préfixe et niveau\n * @param {string} level - Niveau de log ('debug', 'info', 'warn', 'error')\n * @param {string} message - Message à logger\n * @param {...any} args - Arguments supplémentaires\n */\nexport function log(level, message, ...args) {\n  if (!CONFIG.debug.enabled) return;\n  \n  const levels = ['debug', 'info', 'warn', 'error'];\n  const currentLevelIndex = levels.indexOf(CONFIG.debug.logLevel);\n  const messageLevelIndex = levels.indexOf(level);\n  \n  if (messageLevelIndex >= currentLevelIndex) {\n    const prefix = CONFIG.debug.logPrefix;\n    const timestamp = new Date().toISOString();\n    console[level](`${prefix} [${timestamp}] ${message}`, ...args);\n  }\n}\n\n// Export par défaut\nexport default CONFIG;","// LinkedIn Formateur Toolbox - Error Handler\n// Système de gestion d'erreurs centralisé et robuste\n\nimport { CONFIG, log } from '../../config/index.js';\n\n/**\n * Types d'erreurs de l'extension\n */\nexport const ErrorTypes = {\n  INITIALIZATION: 'initialization',\n  SELECTION_DETECTION: 'selection_detection',\n  FORMATTING: 'formatting',\n  TEXT_REPLACEMENT: 'text_replacement',\n  UI_INTERACTION: 'ui_interaction',\n  CONFIGURATION: 'configuration',\n  PERMISSION: 'permission',\n  NETWORK: 'network',\n  UNKNOWN: 'unknown'\n};\n\n/**\n * Severité des erreurs\n */\nexport const ErrorSeverity = {\n  LOW: 'low',         // Erreur mineure, n'affecte pas le fonctionnement\n  MEDIUM: 'medium',   // Erreur modérée, certaines fonctionnalités peuvent échouer\n  HIGH: 'high',       // Erreur critique, l'extension ne peut pas fonctionner\n  CRITICAL: 'critical' // Erreur fatale, nécessite une intervention immédiate\n};\n\n/**\n * Classe pour représenter une erreur de l'extension\n */\nexport class ExtensionError extends Error {\n  constructor(message, type = ErrorTypes.UNKNOWN, severity = ErrorSeverity.MEDIUM, context = {}) {\n    super(message);\n    this.name = 'ExtensionError';\n    this.type = type;\n    this.severity = severity;\n    this.context = context;\n    this.timestamp = new Date().toISOString();\n    this.userAgent = navigator.userAgent;\n    this.url = window.location.href;\n    \n    // Capturer la stack trace si disponible\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ExtensionError);\n    }\n  }\n\n  /**\n   * Sérialise l'erreur pour le logging\n   */\n  serialize() {\n    return {\n      message: this.message,\n      type: this.type,\n      severity: this.severity,\n      context: this.context,\n      timestamp: this.timestamp,\n      userAgent: this.userAgent,\n      url: this.url,\n      stack: this.stack\n    };\n  }\n}\n\n/**\n * Gestionnaire d'erreurs centralisé\n */\nexport class ErrorHandler {\n  constructor() {\n    this.errorCount = new Map();\n    this.errorHistory = [];\n    this.maxHistorySize = 100;\n    this.suppressedErrors = new Set();\n    \n    // Écouter les erreurs globales\n    this.setupGlobalErrorHandling();\n  }\n\n  /**\n   * Configure la gestion d'erreurs globale\n   */\n  setupGlobalErrorHandling() {\n    // Erreurs JavaScript non capturées\n    window.addEventListener('error', (event) => {\n      this.handleError(new ExtensionError(\n        event.message,\n        ErrorTypes.UNKNOWN,\n        ErrorSeverity.MEDIUM,\n        {\n          filename: event.filename,\n          lineno: event.lineno,\n          colno: event.colno,\n          error: event.error\n        }\n      ));\n    });\n\n    // Promesses rejetées non capturées\n    window.addEventListener('unhandledrejection', (event) => {\n      this.handleError(new ExtensionError(\n        `Unhandled promise rejection: ${event.reason}`,\n        ErrorTypes.UNKNOWN,\n        ErrorSeverity.MEDIUM,\n        { reason: event.reason }\n      ));\n    });\n  }\n\n  /**\n   * Gère une erreur de manière centralisée\n   */\n  handleError(error, shouldThrow = false) {\n    // Convertir en ExtensionError si nécessaire\n    if (!(error instanceof ExtensionError)) {\n      error = new ExtensionError(\n        error.message || 'Unknown error',\n        ErrorTypes.UNKNOWN,\n        ErrorSeverity.MEDIUM,\n        { originalError: error }\n      );\n    }\n\n    // Vérifier si l'erreur est supprimée\n    if (this.isErrorSuppressed(error)) {\n      return;\n    }\n\n    // Compter les occurrences\n    const errorKey = `${error.type}_${error.message}`;\n    this.errorCount.set(errorKey, (this.errorCount.get(errorKey) || 0) + 1);\n\n    // Ajouter à l'historique\n    this.addToHistory(error);\n\n    // Logger l'erreur\n    this.logError(error);\n\n    // Actions selon la severité\n    this.handleBySeverity(error);\n\n    // Lancer l'erreur si demandé\n    if (shouldThrow) {\n      throw error;\n    }\n  }\n\n  /**\n   * Vérifie si une erreur doit être supprimée\n   */\n  isErrorSuppressed(error) {\n    return this.suppressedErrors.has(error.type) || \n           this.suppressedErrors.has(`${error.type}_${error.message}`);\n  }\n\n  /**\n   * Ajoute une erreur à l'historique\n   */\n  addToHistory(error) {\n    this.errorHistory.push(error.serialize());\n    \n    // Limiter la taille de l'historique\n    if (this.errorHistory.length > this.maxHistorySize) {\n      this.errorHistory.shift();\n    }\n  }\n\n  /**\n   * Log l'erreur avec le bon niveau\n   */\n  logError(error) {\n    const logLevel = this.getLogLevel(error.severity);\n    log(logLevel, `[${error.type}] ${error.message}`, error.context);\n    \n    // Log détaillé en mode debug\n    if (CONFIG.debug.enabled) {\n      log('debug', 'Error details', error.serialize());\n    }\n  }\n\n  /**\n   * Obtient le niveau de log selon la severité\n   */\n  getLogLevel(severity) {\n    switch (severity) {\n      case ErrorSeverity.LOW: return 'debug';\n      case ErrorSeverity.MEDIUM: return 'warn';\n      case ErrorSeverity.HIGH: return 'error';\n      case ErrorSeverity.CRITICAL: return 'error';\n      default: return 'warn';\n    }\n  }\n\n  /**\n   * Gère l'erreur selon sa severité\n   */\n  handleBySeverity(error) {\n    switch (error.severity) {\n      case ErrorSeverity.LOW:\n        // Erreur mineure, continuer normalement\n        break;\n        \n      case ErrorSeverity.MEDIUM:\n        // Erreur modérée, peut nécessiter une action\n        this.handleMediumError(error);\n        break;\n        \n      case ErrorSeverity.HIGH:\n        // Erreur critique, actions de récupération\n        this.handleHighError(error);\n        break;\n        \n      case ErrorSeverity.CRITICAL:\n        // Erreur fatale, arrêter l'extension\n        this.handleCriticalError(error);\n        break;\n    }\n  }\n\n  /**\n   * Gère les erreurs de severité moyenne\n   */\n  handleMediumError(error) {\n    // Retry automatique pour certains types d'erreurs\n    if (error.type === ErrorTypes.NETWORK) {\n      // Possible retry logic ici\n    }\n  }\n\n  /**\n   * Gère les erreurs de haute severité\n   */\n  handleHighError(error) {\n    // Notifier l'utilisateur si nécessaire\n    if (error.type === ErrorTypes.FORMATTING) {\n      this.notifyUser('Une erreur de formatage s\\'est produite. Veuillez réessayer.', 'warning');\n    }\n  }\n\n  /**\n   * Gère les erreurs critiques\n   */\n  handleCriticalError(error) {\n    // Désactiver l'extension si nécessaire\n    log('error', 'Critical error occurred, extension may need to be disabled', error.serialize());\n    \n    // Notifier l'utilisateur\n    this.notifyUser('Une erreur critique s\\'est produite. L\\'extension va être désactivée.', 'error');\n  }\n\n  /**\n   * Notifie l'utilisateur (à implémenter selon le besoin)\n   */\n  notifyUser(message, type = 'info') {\n    // Pour l'instant, utiliser console\n    console[type](`[LinkedIn Formateur] ${message}`);\n    \n    // Possibilité d'ajouter une notification UI plus tard\n  }\n\n  /**\n   * Supprime un type d'erreur\n   */\n  suppressError(errorType) {\n    this.suppressedErrors.add(errorType);\n  }\n\n  /**\n   * Réactive un type d'erreur\n   */\n  unsuppressError(errorType) {\n    this.suppressedErrors.delete(errorType);\n  }\n\n  /**\n   * Obtient les statistiques d'erreurs\n   */\n  getErrorStats() {\n    return {\n      totalErrors: this.errorHistory.length,\n      errorCounts: Object.fromEntries(this.errorCount),\n      recentErrors: this.errorHistory.slice(-10),\n      suppressedErrors: Array.from(this.suppressedErrors)\n    };\n  }\n\n  /**\n   * Nettoie l'historique des erreurs\n   */\n  clearErrorHistory() {\n    this.errorHistory = [];\n    this.errorCount.clear();\n  }\n\n  /**\n   * Wrapper pour l'exécution sécurisée d'une fonction\n   */\n  async safeExecute(fn, errorType = ErrorTypes.UNKNOWN, context = {}) {\n    try {\n      return await fn();\n    } catch (error) {\n      this.handleError(new ExtensionError(\n        error.message || 'Safe execution failed',\n        errorType,\n        ErrorSeverity.MEDIUM,\n        { ...context, originalError: error }\n      ));\n      return null;\n    }\n  }\n\n  /**\n   * Crée un wrapper de fonction avec gestion d'erreur automatique\n   */\n  createErrorWrapper(fn, errorType = ErrorTypes.UNKNOWN, context = {}) {\n    return async (...args) => {\n      return this.safeExecute(\n        () => fn(...args),\n        errorType,\n        { ...context, arguments: args }\n      );\n    };\n  }\n}\n\n// Instance globale du gestionnaire d'erreurs\nexport const errorHandler = new ErrorHandler();\n\n// Fonctions utilitaires\nexport const handleError = (error, shouldThrow = false) => errorHandler.handleError(error, shouldThrow);\nexport const safeExecute = (fn, errorType, context) => errorHandler.safeExecute(fn, errorType, context);\nexport const createErrorWrapper = (fn, errorType, context) => errorHandler.createErrorWrapper(fn, errorType, context);","// LinkedIn Formateur Toolbox - Selection Detector\n// Détection intelligente de la sélection de texte dans les champs LinkedIn\n\nimport { CONFIG, log } from '../config/index.js';\nimport { errorHandler, ExtensionError, ErrorTypes, ErrorSeverity } from './utils/error-handler.js';\n\n/**\n * Classe principale pour la détection de sélection\n */\nclass SelectionDetector {\n  constructor() {\n    this.isInitialized = false;\n    this.currentSelection = null;\n    this.currentField = null;\n    this.selectionHandlers = new Set();\n    this.debounceTimer = null;\n    this.isProcessingMouseUp = false;\n    \n    // Bind methods\n    this.handleSelectionChange = this.handleSelectionChange.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  /**\n   * Initialise la détection de sélection\n   */\n  init() {\n    if (this.isInitialized) {\n      return;\n    }\n\n    return errorHandler.safeExecute(() => {\n      log('info', 'Initializing selection detector');\n      \n      // Événements globaux\n      document.addEventListener('selectionchange', this.handleSelectionChange, true);\n      document.addEventListener('mouseup', this.handleMouseUp, true);\n      document.addEventListener('keyup', this.handleKeyUp, true);\n      \n      // Observer pour les nouveaux champs (LinkedIn SPA)\n      this.observeNewFields();\n      \n      this.isInitialized = true;\n      log('info', 'Selection detector initialized successfully');\n    }, ErrorTypes.INITIALIZATION, { component: 'selection-detector' });\n  }\n\n  /**\n   * Observer pour détecter les nouveaux champs LinkedIn (SPA)\n   */\n  observeNewFields() {\n    const observer = new MutationObserver((mutations) => {\n      mutations.forEach((mutation) => {\n        mutation.addedNodes.forEach((node) => {\n          if (node.nodeType === Node.ELEMENT_NODE) {\n            this.checkForLinkedInFields(node);\n          }\n        });\n      });\n    });\n\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n\n    // Check initial fields\n    this.checkForLinkedInFields(document.body);\n  }\n\n  /**\n   * Vérifie s'il y a de nouveaux champs LinkedIn dans un élément\n   */\n  checkForLinkedInFields(element) {\n    const selectors = CONFIG.detection.linkedinSelectors;\n    log('debug', 'Checking for LinkedIn fields', { selectors: selectors.length });\n    \n    selectors.forEach(selector => {\n      try {\n        const fields = element.querySelectorAll(selector);\n        fields.forEach(field => {\n          if (!field.hasAttribute('data-ltf-monitored')) {\n            this.monitorField(field);\n          }\n        });\n      } catch (error) {\n        // Sélecteur invalide, on l'ignore\n        log('debug', 'Invalid selector ignored', { selector, error: error.message });\n      }\n    });\n  }\n\n  /**\n   * Ajoute la surveillance à un champ spécifique\n   */\n  monitorField(field) {\n    if (!this.isValidLinkedInField(field)) {\n      return;\n    }\n\n    field.setAttribute('data-ltf-monitored', 'true');\n  }\n\n  /**\n   * Vérifie si c'est un champ LinkedIn valide\n   */\n  isValidLinkedInField(field) {\n    const detectionConfig = CONFIG.detection;\n    \n    // Vérifier si c'est en lecture seule\n    for (const attr of detectionConfig.readOnlyAttributes) {\n      if (field.hasAttribute(attr) && field.getAttribute(attr) !== 'false') {\n        log('debug', 'Field rejected: readonly', { field: field.tagName, attr });\n        return false;\n      }\n    }\n\n    // Vérifier les classes à exclure\n    for (const className of detectionConfig.excludeClasses) {\n      if (field.classList.contains(className)) {\n        log('debug', 'Field rejected: excluded class', { field: field.tagName, className });\n        return false;\n      }\n    }\n\n    // Vérifier si c'est dans le contexte LinkedIn\n    return this.isInLinkedInContext(field);\n  }\n\n  /**\n   * Vérifie si l'élément est dans le contexte LinkedIn\n   */\n  isInLinkedInContext(element) {\n    // Vérifier l'URL\n    if (!window.location.hostname.includes('linkedin.com')) {\n      log('debug', 'Not on LinkedIn domain');\n      return false;\n    }\n\n    // Vérifier les classes parentes LinkedIn\n    let parent = element.parentElement;\n    let depth = 0;\n    const contextConfig = CONFIG.detection.contextValidation;\n    const maxDepth = contextConfig.maxDepth;\n\n    while (parent && depth < maxDepth) {\n      const classList = parent.classList;\n      \n      // Classes LinkedIn communes\n      for (const linkedinClass of contextConfig.linkedinClasses) {\n        if (classList.contains(linkedinClass)) {\n          log('debug', 'Found LinkedIn context', { class: linkedinClass, depth });\n          return true;\n        }\n      }\n\n      parent = parent.parentElement;\n      depth++;\n    }\n\n    log('debug', 'Default accept on LinkedIn');\n    return true; // Par défaut, accepter si on est sur LinkedIn\n  }\n\n  /**\n   * Gestionnaire principal des changements de sélection\n   */\n  handleSelectionChange(event) {\n    // Ignorer si on traite déjà un mouseup\n    if (this.isProcessingMouseUp) {\n      return;\n    }\n    this.debounceSelectionChange();\n  }\n\n  /**\n   * Gestionnaire mouseup pour détecter les sélections à la souris\n   */\n  handleMouseUp(event) {\n    // Désactiver temporairement selectionchange pour éviter les conflits\n    this.isProcessingMouseUp = true;\n    \n    // Délai adapté selon la longueur de la sélection potentielle\n    const delay = this.getSelectionStabilizationDelay();\n    setTimeout(() => {\n      this.processSelection();\n      this.isProcessingMouseUp = false;\n    }, delay);\n  }\n\n  /**\n   * Gestionnaire keyup pour détecter les sélections au clavier\n   */\n  handleKeyUp(event) {\n    // Seulement pour les touches de navigation et sélection\n    const selectionKeys = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown', 'Home', 'End', 'Shift'];\n    \n    if (selectionKeys.includes(event.key) || event.shiftKey) {\n      this.debounceSelectionChange();\n    }\n  }\n\n  /**\n   * Debounce les changements de sélection pour éviter le spam\n   */\n  debounceSelectionChange() {\n    if (this.debounceTimer) {\n      clearTimeout(this.debounceTimer);\n    }\n\n    this.debounceTimer = setTimeout(() => {\n      this.processSelection();\n    }, CONFIG.detection.debounceDelay);\n  }\n\n  /**\n   * Traite la sélection actuelle\n   */\n  processSelection() {\n    const selection = window.getSelection();\n    \n    if (!selection || selection.rangeCount === 0) {\n      this.clearSelection();\n      return;\n    }\n\n    const range = selection.getRangeAt(0);\n    const selectedText = selection.toString().trim();\n\n    // Vérifier la longueur minimale\n    if (selectedText.length < CONFIG.detection.minSelectionLength) {\n      log('debug', 'Selection too short', { length: selectedText.length });\n      this.clearSelection();\n      return;\n    }\n\n    // Vérifier si la sélection est dans un champ LinkedIn (méthode améliorée)\n    const field = this.findLinkedInFieldImproved(range);\n\n    if (!field) {\n      log('debug', 'No LinkedIn field found for selection', { \n        text: selectedText.substring(0, 50),\n        commonAncestor: range.commonAncestorContainer.tagName \n      });\n      this.clearSelection();\n      return;\n    }\n\n    // Détection des sélections multi-mots pour debugging\n    const wordCount = selectedText.trim().split(/\\s+/).length;\n    const isMultiWord = wordCount > 1;\n    \n    log('debug', 'Selection processed successfully', {\n      textLength: selectedText.length,\n      wordCount,\n      isMultiWord,\n      fieldType: field.tagName,\n      fieldId: field.id || 'no-id'\n    });\n\n    // Nouvelle sélection valide détectée\n    this.setSelection({\n      text: selectedText,\n      range: range,\n      field: field,\n      fieldInfo: this.getFieldInfo(field),\n      isMultiWord,\n      wordCount\n    });\n  }\n\n  /**\n   * Trouve le champ LinkedIn parent de l'élément\n   */\n  findLinkedInField(element) {\n    let current = element;\n    let depth = 0;\n    const maxDepth = 20; // Augmenté pour les structures complexes\n\n    while (current && depth < maxDepth) {\n      if (current.nodeType === Node.ELEMENT_NODE) {\n        // Vérifier si c'est un champ surveillé\n        if (current.hasAttribute('data-ltf-monitored')) {\n          return current;\n        }\n\n        // Vérifier avec les sélecteurs\n        for (const selector of CONFIG.detection.linkedinSelectors) {\n          try {\n            if (current.matches(selector) && this.isValidLinkedInField(current)) {\n              this.monitorField(current); // L'ajouter à la surveillance\n              return current;\n            }\n          } catch (error) {\n            // Sélecteur invalide\n            log('debug', 'Invalid selector in findLinkedInField', { selector, error: error.message });\n          }\n        }\n      }\n\n      current = current.parentElement;\n      depth++;\n    }\n\n    return null;\n  }\n\n  /**\n   * Obtient les informations sur un champ\n   */\n  getFieldInfo(field) {\n    return {\n      tagName: field.tagName.toLowerCase(),\n      type: field.type || 'unknown',\n      placeholder: field.getAttribute('placeholder') || field.getAttribute('data-placeholder') || '',\n      role: field.getAttribute('role') || '',\n      classes: Array.from(field.classList),\n      id: field.id || '',\n      isContentEditable: field.contentEditable === 'true'\n    };\n  }\n\n  /**\n   * Définit une nouvelle sélection\n   */\n  setSelection(selectionData) {\n    this.currentSelection = selectionData;\n    this.currentField = selectionData.field;\n\n    log('info', 'Selection set', { \n      text: selectionData.text.substring(0, 50) + '...', \n      fieldType: selectionData.fieldInfo.tagName \n    });\n\n    // Notifier les handlers\n    this.notifySelectionHandlers('selection', selectionData);\n  }\n\n  /**\n   * Efface la sélection actuelle\n   */\n  clearSelection() {\n    if (this.currentSelection) {\n      log('info', 'Selection cleared');\n      \n      // Notifier les handlers\n      this.notifySelectionHandlers('deselection', {\n        previousSelection: this.currentSelection\n      });\n\n      this.currentSelection = null;\n      this.currentField = null;\n    }\n  }\n\n  /**\n   * Ajoute un handler pour les événements de sélection\n   */\n  addSelectionHandler(handler) {\n    this.selectionHandlers.add(handler);\n  }\n\n  /**\n   * Supprime un handler\n   */\n  removeSelectionHandler(handler) {\n    this.selectionHandlers.delete(handler);\n  }\n\n  /**\n   * Notifie tous les handlers\n   */\n  notifySelectionHandlers(type, data) {\n    this.selectionHandlers.forEach(handler => {\n      try {\n        handler(type, data);\n      } catch (error) {\n      }\n    });\n  }\n\n  /**\n   * Obtient la sélection actuelle\n   */\n  getCurrentSelection() {\n    return this.currentSelection;\n  }\n\n  /**\n   * Obtient le champ actuel\n   */\n  getCurrentField() {\n    return this.currentField;\n  }\n\n  /**\n   * Obtient le délai de stabilisation adapté à la sélection\n   */\n  getSelectionStabilizationDelay() {\n    const selection = window.getSelection();\n    if (!selection || selection.rangeCount === 0) {\n      return CONFIG.detection.stabilizationDelay;\n    }\n\n    const selectedText = selection.toString();\n    const wordCount = selectedText.trim().split(/\\s+/).length;\n\n    // Utiliser un délai plus long pour les sélections multi-mots\n    if (wordCount > 1) {\n      return CONFIG.detection.multiWordStabilizationDelay;\n    }\n\n    return CONFIG.detection.stabilizationDelay;\n  }\n\n  /**\n   * Améliore la détection des champs LinkedIn pour les sélections multi-éléments\n   */\n  findLinkedInFieldImproved(range) {\n    // Essayer d'abord avec le commonAncestor\n    let field = this.findLinkedInField(range.commonAncestorContainer);\n    if (field) {\n      return field;\n    }\n\n    // Essayer avec le startContainer\n    field = this.findLinkedInField(range.startContainer);\n    if (field) {\n      return field;\n    }\n\n    // Essayer avec le endContainer\n    field = this.findLinkedInField(range.endContainer);\n    if (field) {\n      return field;\n    }\n\n    // Dernier recours : vérifier les éléments dans la sélection\n    return this.findLinkedInFieldInSelection(range);\n  }\n\n  /**\n   * Trouve un champ LinkedIn dans la sélection\n   */\n  findLinkedInFieldInSelection(range) {\n    try {\n      const walker = document.createTreeWalker(\n        range.commonAncestorContainer,\n        NodeFilter.SHOW_ELEMENT,\n        null,\n        false\n      );\n\n      let node;\n      while (node = walker.nextNode()) {\n        if (range.intersectsNode(node)) {\n          const field = this.findLinkedInField(node);\n          if (field) {\n            return field;\n          }\n        }\n      }\n    } catch (error) {\n      log('debug', 'Error in findLinkedInFieldInSelection', error);\n    }\n\n    return null;\n  }\n\n  /**\n   * Nettoie et détruit le détecteur\n   */\n  destroy() {\n    if (!this.isInitialized) return;\n\n    document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    document.removeEventListener('mouseup', this.handleMouseUp, true);\n    document.removeEventListener('keyup', this.handleKeyUp, true);\n\n    if (this.debounceTimer) {\n      clearTimeout(this.debounceTimer);\n    }\n\n    this.selectionHandlers.clear();\n    this.currentSelection = null;\n    this.currentField = null;\n    this.isInitialized = false;\n    this.isProcessingMouseUp = false;\n\n    log('info', 'Selection detector destroyed');\n  }\n}\n\n// Exporter la classe et créer une instance globale\nexport { SelectionDetector };\n\n// Instance globale pour l'extension\nexport const selectionDetector = new SelectionDetector();","// LinkedIn Formateur Toolbox - Toolbox UI Component\n// Interface utilisateur de la toolbox flottante\n\nimport { CONFIG, getConfig, log } from '../config/index.js';\nimport { errorHandler, ExtensionError, ErrorTypes, ErrorSeverity } from './utils/error-handler.js';\n\n/**\n * Classe principale pour la toolbox flottante\n */\nclass ToolboxUI {\n  constructor() {\n    this.isVisible = false;\n    this.toolboxElement = null;\n    this.currentSelection = null;\n    this.formatHandlers = new Map();\n    this.isAnimating = false;\n    \n    // Bind methods\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    \n    // Initialisation\n    this.init();\n  }\n\n  /**\n   * Initialise la toolbox\n   */\n  init() {\n    return errorHandler.safeExecute(() => {\n      log('info', 'Initializing toolbox UI');\n      \n      // Créer l'élément toolbox\n      this.createToolboxElement();\n      \n      // Ajouter les événements globaux\n      document.addEventListener('click', this.handleDocumentClick, true);\n      document.addEventListener('keydown', this.handleKeyDown, true);\n      \n      log('info', 'Toolbox UI initialized successfully');\n    }, ErrorTypes.INITIALIZATION, { component: 'toolbox' });\n  }\n\n  /**\n   * Crée l'élément DOM de la toolbox\n   */\n  createToolboxElement() {\n    // Supprimer l'ancienne toolbox si elle existe\n    if (this.toolboxElement) {\n      this.toolboxElement.remove();\n    }\n\n    const toolboxConfig = CONFIG.ui.toolbox;\n    const cssPrefix = toolboxConfig.cssPrefix;\n\n    // Créer le conteneur principal\n    this.toolboxElement = document.createElement('div');\n    this.toolboxElement.id = 'ltf-toolbox';\n    this.toolboxElement.className = `\n      ${cssPrefix}fixed\n      ${cssPrefix}bg-toolbox-bg\n      ${cssPrefix}border\n      ${cssPrefix}border-toolbox-border\n      ${cssPrefix}rounded-toolbox\n      ${cssPrefix}shadow-toolbox\n      ${cssPrefix}flex\n      ${cssPrefix}items-center\n      ${cssPrefix}gap-1\n      ${cssPrefix}p-1\n      ${cssPrefix}opacity-0\n      ${cssPrefix}pointer-events-none\n      ${cssPrefix}transition-all\n      ${cssPrefix}duration-200\n    `.trim().replace(/\\s+/g, ' ');\n\n    // Styles inline pour garantir le bon affichage\n    this.toolboxElement.style.cssText = `\n      position: fixed;\n      z-index: ${toolboxConfig.zIndex};\n      width: ${toolboxConfig.width}px;\n      height: ${toolboxConfig.height}px;\n      background: ${toolboxConfig.colors.background};\n      border: 1px solid ${toolboxConfig.colors.border};\n      border-radius: ${toolboxConfig.styles.borderRadius};\n      box-shadow: ${toolboxConfig.styles.boxShadow};\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: ${toolboxConfig.buttonSpacing}px;\n      opacity: 0;\n      pointer-events: none;\n      transition: all 0.2s ease-out;\n      transform: translateY(8px);\n      font-family: ${toolboxConfig.styles.fontFamily};\n    `;\n\n    // Créer les boutons\n    this.createButtons();\n\n    // Ajouter au DOM (mais invisible)\n    document.body.appendChild(this.toolboxElement);\n  }\n\n  /**\n   * Crée les boutons de formatage\n   */\n  createButtons() {\n    const formatConfig = CONFIG.formats.definitions;\n    const toolboxConfig = CONFIG.ui.toolbox;\n    const buttonConfig = CONFIG.ui.buttons;\n    \n    log('info', 'Creating toolbox buttons', Object.keys(formatConfig));\n    \n    Object.values(formatConfig).forEach(format => {\n      const button = document.createElement('button');\n      button.id = `ltf-btn-${format.id}`;\n      button.className = `ltf-toolbox-btn ltf-btn-${format.id}`;\n      button.setAttribute('data-format', format.id);\n      button.setAttribute('title', format.tooltip);\n      button.textContent = format.label;\n\n      // Styles inline pour les boutons\n      button.style.cssText = `\n        width: ${toolboxConfig.buttonSize}px;\n        height: ${toolboxConfig.buttonSize}px;\n        border: none;\n        border-radius: ${buttonConfig.borderRadius};\n        background: transparent;\n        color: ${toolboxConfig.colors.text};\n        font-size: ${toolboxConfig.styles.fontSize};\n        font-weight: ${toolboxConfig.styles.fontWeight};\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        transition: ${buttonConfig.transition};\n        user-select: none;\n        -webkit-user-select: none;\n      `;\n\n      // Ajouter les styles spécifiques au bouton\n      if (format.className) {\n        if (format.id === 'bold') {\n          button.style.fontWeight = 'bold';\n        } else if (format.id === 'italic') {\n          button.style.fontStyle = 'italic';\n        } else if (format.id === 'underline') {\n          button.style.textDecoration = 'underline';\n        } else if (format.id === 'strikethrough') {\n          button.style.textDecoration = 'line-through';\n        }\n      }\n\n      // Événements hover\n      button.addEventListener('mouseenter', () => {\n        button.style.backgroundColor = toolboxConfig.colors.backgroundHover;\n        button.style.color = toolboxConfig.colors.textHover;\n      });\n\n      button.addEventListener('mouseleave', () => {\n        button.style.backgroundColor = 'transparent';\n        button.style.color = toolboxConfig.colors.text;\n      });\n\n      // Événement clic\n      button.addEventListener('click', this.handleButtonClick);\n\n      this.toolboxElement.appendChild(button);\n    });\n  }\n\n  /**\n   * Affiche la toolbox à la position du texte sélectionné\n   */\n  show(selectionData) {\n    if (this.isAnimating) return;\n\n    this.currentSelection = selectionData;\n    this.isVisible = true;\n\n\n    // Calculer la position\n    const position = this.calculatePosition(selectionData);\n    \n    // Positionner la toolbox\n    this.toolboxElement.style.left = position.x + 'px';\n    this.toolboxElement.style.top = position.y + 'px';\n\n    // Afficher avec animation\n    this.animateShow();\n  }\n\n  /**\n   * Calcule la position optimale pour la toolbox\n   */\n  calculatePosition(selectionData) {\n    const range = selectionData.range;\n    const toolboxConfig = CONFIG.ui.toolbox;\n    \n    // Gérer les sélections multi-lignes\n    const rect = this.getOptimalSelectionRect(range);\n    \n    // Position par défaut : au-dessus du texte sélectionné, parfaitement centré\n    const centerX = rect.left + (rect.width / 2);\n    let x = centerX - (toolboxConfig.width / 2);\n    let y = rect.top - toolboxConfig.height - toolboxConfig.offsetTop;\n\n    // Ajustements pour les débordements\n    const viewport = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    // Ajustement horizontal avec marges symétriques\n    const leftBoundary = toolboxConfig.offsetSides;\n    const rightBoundary = viewport.width - toolboxConfig.width - toolboxConfig.offsetSides;\n    \n    if (x < leftBoundary) {\n      x = leftBoundary;\n    } else if (x > rightBoundary) {\n      x = rightBoundary;\n    }\n\n    // Ajustement vertical - si pas assez de place en haut, mettre en bas\n    if (y < toolboxConfig.offsetTop) {\n      y = rect.bottom + toolboxConfig.offsetBottom;\n    }\n\n    // Vérifier que la toolbox reste dans le viewport\n    if (y + toolboxConfig.height > viewport.height - toolboxConfig.offsetBottom) {\n      y = viewport.height - toolboxConfig.height - toolboxConfig.offsetBottom;\n    }\n\n    return { x, y };\n  }\n\n  /**\n   * Animation d'apparition\n   */\n  animateShow() {\n    this.isAnimating = true;\n    \n    // Activer les interactions\n    this.toolboxElement.style.pointerEvents = 'auto';\n    \n    // Animation slide-up + fade-in\n    this.toolboxElement.style.opacity = '1';\n    this.toolboxElement.style.transform = 'translateY(0)';\n\n    // Fin de l'animation\n    setTimeout(() => {\n      this.isAnimating = false;\n    }, CONFIG.ui.toolbox.animationDuration);\n  }\n\n  /**\n   * Masque la toolbox\n   */\n  hide() {\n    if (!this.isVisible || this.isAnimating) return;\n\n    this.isVisible = false;\n    this.isAnimating = true;\n\n\n    // Animation fade-out\n    this.toolboxElement.style.opacity = '0';\n    this.toolboxElement.style.transform = 'translateY(8px)';\n    this.toolboxElement.style.pointerEvents = 'none';\n\n    // Nettoyage après animation\n    setTimeout(() => {\n      this.currentSelection = null;\n      this.isAnimating = false;\n    }, CONFIG.ui.toolbox.fadeOutDuration);\n  }\n\n  /**\n   * Gère les clics sur les boutons\n   */\n  handleButtonClick(event) {\n    return errorHandler.safeExecute(() => {\n      event.preventDefault();\n      event.stopPropagation();\n\n      const button = event.currentTarget;\n      const formatType = button.getAttribute('data-format');\n\n      if (!formatType) {\n        throw new ExtensionError(\n          'No format type found on button',\n          ErrorTypes.UI_INTERACTION,\n          ErrorSeverity.MEDIUM,\n          { buttonId: button.id }\n        );\n      }\n\n      // Ajouter effet visuel de clic\n      button.style.backgroundColor = CONFIG.ui.toolbox.colors.backgroundActive;\n      setTimeout(() => {\n        button.style.backgroundColor = 'transparent';\n      }, CONFIG.ui.buttons.clickFeedbackDuration);\n\n      // Déclencher le formatage\n      this.triggerFormatting(formatType);\n\n      // Masquer la toolbox\n      this.hide();\n    }, ErrorTypes.UI_INTERACTION, { formatType: event.currentTarget?.getAttribute('data-format') });\n  }\n\n  /**\n   * Déclenche le formatage du texte\n   */\n  triggerFormatting(formatType) {\n    if (!this.currentSelection) return;\n\n\n    // Notifier les handlers enregistrés\n    if (this.formatHandlers.has(formatType)) {\n      const handler = this.formatHandlers.get(formatType);\n      try {\n        handler(this.currentSelection, formatType);\n      } catch (error) {\n      }\n    }\n  }\n\n  /**\n   * Enregistre un handler pour un type de formatage\n   */\n  addFormatHandler(formatType, handler) {\n    this.formatHandlers.set(formatType, handler);\n  }\n\n  /**\n   * Supprime un handler de formatage\n   */\n  removeFormatHandler(formatType) {\n    this.formatHandlers.delete(formatType);\n  }\n\n  /**\n   * Gère les clics sur le document (pour fermer la toolbox)\n   */\n  handleDocumentClick(event) {\n    if (!this.isVisible) return;\n\n    // Si le clic est sur la toolbox, ne pas fermer\n    if (this.toolboxElement.contains(event.target)) {\n      return;\n    }\n\n    // Délai court pour éviter les fermetures pendant la sélection\n    setTimeout(() => {\n      // Vérifier si une sélection est encore active\n      const selection = window.getSelection();\n      if (selection && selection.toString().trim().length > 0) {\n        // Ne pas fermer si une sélection est active\n        return;\n      }\n      \n      // Fermer la toolbox\n      this.hide();\n    }, 50);\n  }\n\n  /**\n   * Obtient le rectangle optimal pour la sélection (gérant les multi-lignes)\n   */\n  getOptimalSelectionRect(range) {\n    try {\n      // Obtenir tous les rectangles de la sélection\n      const rects = range.getClientRects();\n      \n      if (rects.length === 0) {\n        return range.getBoundingClientRect();\n      }\n      \n      if (rects.length === 1) {\n        return rects[0];\n      }\n      \n      // Pour les sélections multi-lignes, utiliser un centrage plus précis\n      const firstRect = rects[0];\n      const lastRect = rects[rects.length - 1];\n      \n      // Calculer la largeur totale de la sélection (de début à fin)\n      const selectionStart = Math.min(firstRect.left, lastRect.left);\n      const selectionEnd = Math.max(firstRect.right, lastRect.right);\n      const totalSelectionWidth = selectionEnd - selectionStart;\n      \n      // Utiliser le centre de la sélection complète\n      const centerX = selectionStart + (totalSelectionWidth / 2);\n      \n      return {\n        left: centerX - (totalSelectionWidth / 2),\n        right: centerX + (totalSelectionWidth / 2),\n        top: firstRect.top,\n        bottom: firstRect.bottom,\n        width: totalSelectionWidth,\n        height: firstRect.height,\n        x: centerX - (totalSelectionWidth / 2),\n        y: firstRect.y\n      };\n    } catch (error) {\n      log('debug', 'Error in getOptimalSelectionRect, falling back to getBoundingClientRect', error);\n      return range.getBoundingClientRect();\n    }\n  }\n\n  /**\n   * Gère les raccourcis clavier\n   */\n  handleKeyDown(event) {\n    if (!this.isVisible) return;\n\n    // Échapper pour fermer\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      this.hide();\n    }\n  }\n\n  /**\n   * Vérifie si la toolbox est visible\n   */\n  isShowing() {\n    return this.isVisible;\n  }\n\n  /**\n   * Obtient la sélection actuelle\n   */\n  getCurrentSelection() {\n    return this.currentSelection;\n  }\n\n  /**\n   * Nettoie et détruit la toolbox\n   */\n  destroy() {\n    if (!this.toolboxElement) return;\n\n\n    // Supprimer les événements\n    document.removeEventListener('click', this.handleDocumentClick, true);\n    document.removeEventListener('keydown', this.handleKeyDown, true);\n\n    // Supprimer l'élément DOM\n    if (this.toolboxElement.parentNode) {\n      this.toolboxElement.parentNode.removeChild(this.toolboxElement);\n    }\n\n    // Nettoyer les références\n    this.toolboxElement = null;\n    this.currentSelection = null;\n    this.formatHandlers.clear();\n    this.isVisible = false;\n    this.isAnimating = false;\n  }\n}\n\n// Exporter la classe et créer une instance globale\nexport { ToolboxUI };\n\n// Instance globale pour l'extension\nexport const toolboxUI = new ToolboxUI();","// LinkedIn Formateur Toolbox - Unicode Factory\n// Factory pattern pour éliminer les répétitions dans les formatages Unicode\n\n/**\n * Mappings Unicode directs (approche sûre qui fonctionne)\n */\nconst UNICODE_MAPPINGS = {\n  bold: {\n    // Lettres majuscules A-Z → 𝐀-𝐙 (U+1D400-U+1D419)\n    'A': '𝐀', 'B': '𝐁', 'C': '𝐂', 'D': '𝐃', 'E': '𝐄', 'F': '𝐅', 'G': '𝐆', 'H': '𝐇',\n    'I': '𝐈', 'J': '𝐉', 'K': '𝐊', 'L': '𝐋', 'M': '𝐌', 'N': '𝐍', 'O': '𝐎', 'P': '𝐏',\n    'Q': '𝐐', 'R': '𝐑', 'S': '𝐒', 'T': '𝐓', 'U': '𝐔', 'V': '𝐕', 'W': '𝐖', 'X': '𝐗',\n    'Y': '𝐘', 'Z': '𝐙',\n    \n    // Lettres minuscules a-z → 𝐚-𝐳 (U+1D41A-U+1D433)\n    'a': '𝐚', 'b': '𝐛', 'c': '𝐜', 'd': '𝐝', 'e': '𝐞', 'f': '𝐟', 'g': '𝐠', 'h': '𝐡',\n    'i': '𝐢', 'j': '𝐣', 'k': '𝐤', 'l': '𝐥', 'm': '𝐦', 'n': '𝐧', 'o': '𝐨', 'p': '𝐩',\n    'q': '𝐪', 'r': '𝐫', 's': '𝐬', 't': '𝐭', 'u': '𝐮', 'v': '𝐯', 'w': '𝐰', 'x': '𝐱',\n    'y': '𝐲', 'z': '𝐳',\n    \n    // Chiffres 0-9 → 𝟎-𝟗 (U+1D7CE-U+1D7D7)\n    '0': '𝟎', '1': '𝟏', '2': '𝟐', '3': '𝟑', '4': '𝟒',\n    '5': '𝟓', '6': '𝟔', '7': '𝟕', '8': '𝟖', '9': '𝟗'\n  },\n  \n  italic: {\n    // Lettres majuscules A-Z → 𝘈-𝘡 (U+1D608-U+1D621)\n    'A': '𝘈', 'B': '𝘉', 'C': '𝘊', 'D': '𝘋', 'E': '𝘌', 'F': '𝘍', 'G': '𝘎', 'H': '𝘏',\n    'I': '𝘐', 'J': '𝘑', 'K': '𝘒', 'L': '𝘓', 'M': '𝘔', 'N': '𝘕', 'O': '𝘖', 'P': '𝘗',\n    'Q': '𝘘', 'R': '𝘙', 'S': '𝘚', 'T': '𝘛', 'U': '𝘜', 'V': '𝘝', 'W': '𝘞', 'X': '𝘟',\n    'Y': '𝘠', 'Z': '𝘡',\n    \n    // Lettres minuscules a-z → 𝘢-𝘻 (U+1D622-U+1D63B)\n    'a': '𝘢', 'b': '𝘣', 'c': '𝘤', 'd': '𝘥', 'e': '𝘦', 'f': '𝘧', 'g': '𝘨', 'h': '𝘩',\n    'i': '𝘪', 'j': '𝘫', 'k': '𝘬', 'l': '𝘭', 'm': '𝘮', 'n': '𝘯', 'o': '𝘰', 'p': '𝘱',\n    'q': '𝘲', 'r': '𝘳', 's': '𝘴', 't': '𝘵', 'u': '𝘶', 'v': '𝘷', 'w': '𝘸', 'x': '𝘹',\n    'y': '𝘺', 'z': '𝘻'\n  },\n  \n  monospace: {\n    // Lettres majuscules A-Z → Mathematical Monospace (U+1D670-U+1D689)\n    'A': '𝙰', 'B': '𝙱', 'C': '𝙲', 'D': '𝙳', 'E': '𝙴', 'F': '𝙵', 'G': '𝙶', 'H': '𝙷',\n    'I': '𝙸', 'J': '𝙹', 'K': '𝙺', 'L': '𝙻', 'M': '𝙼', 'N': '𝙽', 'O': '𝙾', 'P': '𝙿',\n    'Q': '𝚀', 'R': '𝚁', 'S': '𝚂', 'T': '𝚃', 'U': '𝚄', 'V': '𝚅', 'W': '𝚆', 'X': '𝚇',\n    'Y': '𝚈', 'Z': '𝚉',\n    \n    // Lettres minuscules a-z → Mathematical Monospace (U+1D68A-U+1D6A3)\n    'a': '𝚊', 'b': '𝚋', 'c': '𝚌', 'd': '𝚍', 'e': '𝚎', 'f': '𝚏', 'g': '𝚐', 'h': '𝚑',\n    'i': '𝚒', 'j': '𝚓', 'k': '𝚔', 'l': '𝚕', 'm': '𝚖', 'n': '𝚗', 'o': '𝚘', 'p': '𝚙',\n    'q': '𝚚', 'r': '𝚛', 's': '𝚜', 't': '𝚝', 'u': '𝚞', 'v': '𝚟', 'w': '𝚠', 'x': '𝚡',\n    'y': '𝚢', 'z': '𝚣',\n    \n    // Chiffres 0-9 → Mathematical Monospace (U+1D7F6-U+1D7FF)\n    '0': '𝟶', '1': '𝟷', '2': '𝟸', '3': '𝟹', '4': '𝟺', '5': '𝟻', '6': '𝟼', '7': '𝟽', '8': '𝟾', '9': '𝟿'\n  }\n};\n\n/**\n * Caractères combining pour soulignement et barré\n */\nconst COMBINING_CHARS = {\n  underline: '\\u0332',      // Combining underline\n  strikethrough: '\\u0336'   // Combining strikethrough\n};\n\n/**\n * Table de normalisation des caractères accentués\n */\nconst ACCENT_NORMALIZATION = {\n  // Lettres majuscules accentuées\n  'À': 'A', 'Á': 'A', 'Â': 'A', 'Ã': 'A', 'Ä': 'A', 'Å': 'A', 'Æ': 'A',\n  'Ç': 'C',\n  'È': 'E', 'É': 'E', 'Ê': 'E', 'Ë': 'E',\n  'Ì': 'I', 'Í': 'I', 'Î': 'I', 'Ï': 'I',\n  'Ñ': 'N',\n  'Ò': 'O', 'Ó': 'O', 'Ô': 'O', 'Õ': 'O', 'Ö': 'O', 'Ø': 'O',\n  'Ù': 'U', 'Ú': 'U', 'Û': 'U', 'Ü': 'U',\n  'Ý': 'Y', 'Ÿ': 'Y',\n  \n  // Lettres minuscules accentuées\n  'à': 'a', 'á': 'a', 'â': 'a', 'ã': 'a', 'ä': 'a', 'å': 'a', 'æ': 'a',\n  'ç': 'c',\n  'è': 'e', 'é': 'e', 'ê': 'e', 'ë': 'e',\n  'ì': 'i', 'í': 'i', 'î': 'i', 'ï': 'i',\n  'ñ': 'n',\n  'ò': 'o', 'ó': 'o', 'ô': 'o', 'õ': 'o', 'ö': 'o', 'ø': 'o',\n  'ù': 'u', 'ú': 'u', 'û': 'u', 'ü': 'u',\n  'ý': 'y', 'ÿ': 'y'\n};\n\n/**\n * Normalise un caractère accentué vers sa forme de base\n * @param {string} char - Le caractère à normaliser\n * @returns {string} - Le caractère normalisé ou original\n */\nfunction normalizeAccent(char) {\n  return ACCENT_NORMALIZATION[char] || char;\n}\n\n/**\n * Factory pour créer des formatters Unicode avec mappings directs\n * @param {Object} mappings - Table de mapping direct des caractères\n * @returns {Function} - Fonction de formatage\n */\nfunction createUnicodeFormatter(mappings) {\n  return function(text) {\n    if (!text || typeof text !== 'string') {\n      return text;\n    }\n\n    try {\n      let result = '';\n      for (let i = 0; i < text.length; i++) {\n        const char = text[i];\n        \n        // Essayer d'abord le caractère original\n        let unicodeChar = mappings[char];\n        \n        // Si pas trouvé, essayer la version sans accent\n        if (!unicodeChar) {\n          const normalizedChar = normalizeAccent(char);\n          unicodeChar = mappings[normalizedChar];\n        }\n        \n        result += unicodeChar || char; // Unicode, ou caractère original si pas de mapping\n      }\n      return result;\n    } catch (error) {\n      return text; // Fallback vers le texte original\n    }\n  };\n}\n\n/**\n * Factory pour créer des formatters avec combining characters\n * @param {string} combiningChar - Le caractère combining à utiliser\n * @param {Object} baseMappings - Mappings Unicode pour la base (optionnel)\n * @returns {Function} - Fonction de formatage\n */\nfunction createCombiningFormatter(combiningChar, baseMappings = null) {\n  return function(text) {\n    if (!text || typeof text !== 'string') {\n      return text;\n    }\n\n    try {\n      let result = '';\n      \n      // Si des mappings de base sont spécifiés, d'abord appliquer la transformation\n      const baseText = baseMappings ? createUnicodeFormatter(baseMappings)(text) : text;\n      \n      for (let i = 0; i < baseText.length; i++) {\n        const char = baseText[i];\n        result += char;\n        \n        // Ajouter le combining character seulement pour les caractères visibles\n        if (char.trim() !== '' && !char.match(/\\s/)) {\n          result += combiningChar;\n        }\n      }\n\n      return result;\n    } catch (error) {\n      return text; // Fallback vers le texte original\n    }\n  };\n}\n\n/**\n * Crée un reverse mapper pour convertir vers le texte normal\n * @param {Object} mappings - Table de mapping Unicode vers normal\n * @returns {Object} - Map de caractères Unicode vers caractères normaux\n */\nfunction createReverseMap(mappings) {\n  const reverseMap = {};\n  \n  // Inverser le mapping : Unicode → Normal\n  Object.entries(mappings).forEach(([normalChar, unicodeChar]) => {\n    reverseMap[unicodeChar] = normalChar;\n  });\n  \n  return reverseMap;\n}\n\n/**\n * Génère tous les reverse maps pour tous les formatages\n */\nfunction createGlobalReverseMap() {\n  const globalMap = {};\n  \n  Object.entries(UNICODE_MAPPINGS).forEach(([type, mappings]) => {\n    const reverseMap = createReverseMap(mappings);\n    Object.assign(globalMap, reverseMap);\n  });\n\n  return globalMap;\n}\n\n/**\n * Factory principale qui génère tous les formatters\n */\nfunction createFormatters() {\n  return {\n    // Formatters directs avec mappings sûrs\n    toBold: createUnicodeFormatter(UNICODE_MAPPINGS.bold),\n    toItalic: createUnicodeFormatter(UNICODE_MAPPINGS.italic),\n    \n    // Formatters avec combining characters  \n    toUnderline: function(text) {\n      if (!text || typeof text !== 'string') return text;\n      \n      try {\n        let result = '';\n        for (let i = 0; i < text.length; i++) {\n          const char = text[i];\n          \n          // Essayer d'abord le caractère original\n          let monospaceChar = UNICODE_MAPPINGS.monospace[char];\n          \n          // Si pas trouvé, essayer la version sans accent\n          if (!monospaceChar) {\n            const normalizedChar = normalizeAccent(char);\n            monospaceChar = UNICODE_MAPPINGS.monospace[normalizedChar];\n          }\n          \n          if (monospaceChar) {\n            // Caractère monospace + combining underline\n            result += monospaceChar + COMBINING_CHARS.underline;\n          } else if (char === ' ') {\n            result += char; // Garder les espaces normaux\n          } else {\n            // Pour les caractères non mappés, utiliser le caractère original + underline\n            result += char + COMBINING_CHARS.underline;\n          }\n        }\n        return result;\n      } catch (error) {\n        return text;\n      }\n    },\n    toStrikethrough: createCombiningFormatter(COMBINING_CHARS.strikethrough),\n    \n    // Reverse mapper global\n    reverseMap: createGlobalReverseMap(),\n    \n    // Combining characters pour le nettoyage\n    combiningChars: Object.values(COMBINING_CHARS)\n  };\n}\n\n// Export des utilitaires et configuration\nexport {\n  UNICODE_MAPPINGS,\n  COMBINING_CHARS,\n  createUnicodeFormatter,\n  createCombiningFormatter,\n  createReverseMap,\n  createFormatters\n};","// LinkedIn Formateur Toolbox - Unicode Formatters\n// Fonctions de formatage avec caractères Unicode spéciaux pour LinkedIn\n\nimport { createFormatters } from './unicode-factory.js';\n\n// Générer tous les formatters via la factory\nconst formatters = createFormatters();\n\n/**\n * Convertit le texte en caractères Unicode Mathematical Bold\n * Utilisé pour le formatage **gras** sur LinkedIn\n * @param {string} text - Le texte à formater\n * @returns {string} - Le texte formaté en gras Unicode\n */\nexport const toBold = formatters.toBold;\n\n/**\n * Convertit le texte en caractères Unicode Mathematical Italic\n * Utilisé pour le formatage *italique* sur LinkedIn  \n * @param {string} text - Le texte à formater\n * @returns {string} - Le texte formaté en italique Unicode\n */\nexport const toItalic = formatters.toItalic;\n\n/**\n * Ajoute combining underline aux caractères\n * Utilisé pour le formatage souligné sur LinkedIn\n * @param {string} text - Le texte à formater\n * @returns {string} - Le texte formaté avec soulignement Unicode\n */\nexport const toUnderline = formatters.toUnderline;\n\n/**\n * Ajoute combining strikethrough aux caractères\n * Utilisé pour le formatage barré sur LinkedIn\n * @param {string} text - Le texte à formater\n * @returns {string} - Le texte formaté avec strikethrough Unicode\n */\nexport const toStrikethrough = formatters.toStrikethrough;\n\n/**\n * Convertit un texte formaté vers sa forme normale\n * @param {string} text - Le texte formaté à normaliser\n * @returns {string} - Le texte en forme normale\n */\nexport function toNormal(text) {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n\n  try {\n    let result = '';\n    \n    // Utiliser la reverse map générée par la factory\n    const reverseMapping = formatters.reverseMap;\n    const combiningChars = formatters.combiningChars;\n\n    // Parcourir chaque caractère Unicode réel (pas code unit)\n    for (const char of text) {\n      // Ignorer les combining characters\n      if (combiningChars.includes(char)) {\n        continue;\n      }\n      \n      // Convertir vers la forme normale si mapping existe\n      const normalChar = reverseMapping[char];\n      result += normalChar || char;\n    }\n\n    return result;\n\n  } catch (error) {\n    return text;\n  }\n}\n\n/**\n * Détecte le type de formatage appliqué à un texte\n * @param {string} text - Le texte à analyser\n * @returns {Array<string>} - Liste des formatages détectés\n */\nexport function detectFormatting(text) {\n  if (!text || typeof text !== 'string') {\n    return [];\n  }\n\n  const detectedFormats = [];\n\n  try {\n    const combiningChars = formatters.combiningChars;\n    \n    // Regex pour détecter les ranges Unicode des différents formatages\n    const unicodeRanges = {\n      // Mathematical Bold : 𝐀-𝐙 + 𝐚-𝐳 + 𝟎-𝟗\n      bold: /[\\u{1D400}-\\u{1D419}\\u{1D41A}-\\u{1D433}\\u{1D7CE}-\\u{1D7D7}]/u,\n      \n      // Mathematical Sans-Serif Italic : 𝘈-𝘡 + 𝘢-𝘻\n      italic: /[\\u{1D608}-\\u{1D621}\\u{1D622}-\\u{1D63B}]/u,\n      \n      // Mathematical Monospace : 𝙰-𝚉 + 𝚊-𝚣 + 𝟶-𝟿\n      monospace: /[\\u{1D670}-\\u{1D689}\\u{1D68A}-\\u{1D6A3}\\u{1D7F6}-\\u{1D7FF}]/u\n    };\n\n    // Détection par ranges Unicode\n    if (unicodeRanges.bold.test(text)) detectedFormats.push('bold');\n    if (unicodeRanges.italic.test(text)) detectedFormats.push('italic');\n    \n    // Détection par combining characters\n    if (text.includes(combiningChars[0])) detectedFormats.push('underline');\n    if (text.includes(combiningChars[1])) detectedFormats.push('strikethrough');\n    \n    // Cas spécial : underline utilise aussi monospace\n    if (unicodeRanges.monospace.test(text) && !detectedFormats.includes('underline')) {\n      detectedFormats.push('underline');\n    }\n\n    return detectedFormats;\n\n  } catch (error) {\n    return [];\n  }\n}\n\n/**\n * Applique un formatage simple avec toggle off et remplacement\n * @param {string} text - Le texte à formater\n * @param {Array<string>} existingFormats - Liste des formatages déjà appliqués\n * @param {string} newFormat - Le nouveau formatage à appliquer\n * @returns {string} - Le texte avec le nouveau formatage appliqué\n */\nexport function applyIncrementalFormatting(text, existingFormats, newFormat) {\n  if (!text || typeof text !== 'string') return text;\n  if (!newFormat || typeof newFormat !== 'string') return text;\n  \n  existingFormats = existingFormats || [];\n\n  try {\n    // 1. TOGGLE OFF: Si le formatage est déjà appliqué, revenir au texte normal\n    if (existingFormats.includes(newFormat)) {\n      return toNormal(text);\n    }\n\n    // 2. REMPLACEMENT: Si un autre formatage existe, le remplacer\n    if (existingFormats.length > 0) {\n      const normalizedText = toNormal(text);\n      return applySimpleFormatting(normalizedText, newFormat);\n    }\n\n    // 3. FORMATAGE SIMPLE: Aucun formatage existant, appliquer le nouveau\n    return applySimpleFormatting(text, newFormat);\n\n  } catch (error) {\n    return text;\n  }\n}\n\n/**\n * Applique un formatage simple à un texte normal\n * @param {string} text - Le texte à formater\n * @param {string} formatType - Le type de formatage\n * @returns {string} - Le texte formaté\n */\nfunction applySimpleFormatting(text, formatType) {\n  const formatMap = {\n    bold: toBold,\n    italic: toItalic,\n    underline: toUnderline,\n    strikethrough: toStrikethrough\n  };\n  \n  return formatMap[formatType] ? formatMap[formatType](text) : text;\n}\n\n// Export de toutes les fonctions pour utilisation dans content.js\nexport { formatters };","// LinkedIn Formateur Toolbox - Text Formatter\n// Classe spécialisée pour la logique de formatage pure\n\nimport { CONFIG } from '../../config/index.js';\nimport { errorHandler, ExtensionError, ErrorTypes, ErrorSeverity } from '../utils/error-handler.js';\nimport { toBold, toItalic, toUnderline, toStrikethrough, toNormal, detectFormatting, applyIncrementalFormatting } from '../unicode-formatters.js';\n\n/**\n * Classe pour la logique de formatage pure\n * Responsabilité: Transformer du texte selon les règles de formatage\n */\nexport class TextFormatter {\n  constructor() {\n    this.supportedFormats = CONFIG.formats.supported;\n    this.formatFunctions = this.initializeFormatFunctions();\n  }\n\n  /**\n   * Initialise les fonctions de formatage\n   */\n  initializeFormatFunctions() {\n    return {\n      bold: toBold,\n      italic: toItalic,\n      underline: toUnderline,\n      strikethrough: toStrikethrough,\n      normal: toNormal\n    };\n  }\n\n  /**\n   * Applique un formatage à un texte\n   * @param {string} text - Le texte à formater\n   * @param {string} formatType - Le type de formatage\n   * @param {Array} existingFormats - Les formatages déjà présents\n   * @returns {Promise<string>} - Le texte formaté\n   */\n  async formatText(text, formatType, existingFormats = []) {\n    return errorHandler.safeExecute(async () => {\n      this.validateFormatRequest(text, formatType);\n\n      // Utiliser la logique incrémentale pour tous les cas\n      const formattedText = applyIncrementalFormatting(text, existingFormats, formatType);\n\n      this.validateFormattedText(formattedText, text, formatType);\n\n      return formattedText;\n    }, ErrorTypes.FORMATTING, { formatType, textLength: text?.length });\n  }\n\n  /**\n   * Détecte les formatages existants dans un texte\n   * @param {string} text - Le texte à analyser\n   * @returns {Array} - Les formatages détectés\n   */\n  detectFormats(text) {\n    return errorHandler.safeExecute(() => {\n      if (!text || typeof text !== 'string') {\n        return [];\n      }\n\n      return detectFormatting(text);\n    }, ErrorTypes.FORMATTING, { textLength: text?.length }) || [];\n  }\n\n  /**\n   * Valide une demande de formatage\n   * @param {string} text - Le texte à valider\n   * @param {string} formatType - Le type de formatage\n   */\n  validateFormatRequest(text, formatType) {\n    if (!text || typeof text !== 'string') {\n      throw new ExtensionError(\n        'Invalid text provided for formatting',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.MEDIUM,\n        { textType: typeof text, formatType }\n      );\n    }\n\n    if (!formatType || !this.supportedFormats.includes(formatType)) {\n      throw new ExtensionError(\n        'Unsupported format type',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.MEDIUM,\n        { formatType, supportedFormats: this.supportedFormats }\n      );\n    }\n\n    if (text.length > CONFIG.security.maxInputLength) {\n      throw new ExtensionError(\n        'Text too long for formatting',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.MEDIUM,\n        { textLength: text.length, maxLength: CONFIG.security.maxInputLength }\n      );\n    }\n  }\n\n  /**\n   * Valide le texte formaté\n   * @param {string} formattedText - Le texte formaté\n   * @param {string} originalText - Le texte original\n   * @param {string} formatType - Le type de formatage\n   */\n  validateFormattedText(formattedText, originalText, formatType) {\n    if (!formattedText || typeof formattedText !== 'string') {\n      throw new ExtensionError(\n        'Formatting failed to produce valid text',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.HIGH,\n        { formatType, originalLength: originalText.length }\n      );\n    }\n\n    // Vérifier que le texte formaté n'est pas vide si l'original ne l'était pas\n    if (originalText.trim() && !formattedText.trim()) {\n      throw new ExtensionError(\n        'Formatting resulted in empty text',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.HIGH,\n        { formatType, originalText: originalText.substring(0, 50) }\n      );\n    }\n  }\n\n  /**\n   * Applique un formatage simple (fonction directe)\n   * @param {string} text - Le texte à formater\n   * @param {string} formatType - Le type de formatage\n   * @returns {Promise<string>} - Le texte formaté\n   */\n  async applySimpleFormat(text, formatType) {\n    return errorHandler.safeExecute(async () => {\n      this.validateFormatRequest(text, formatType);\n\n      const formatFunction = this.formatFunctions[formatType];\n      if (!formatFunction) {\n        throw new ExtensionError(\n          'Format function not found',\n          ErrorTypes.FORMATTING,\n          ErrorSeverity.MEDIUM,\n          { formatType, availableFunctions: Object.keys(this.formatFunctions) }\n        );\n      }\n\n      const formattedText = formatFunction(text);\n      this.validateFormattedText(formattedText, text, formatType);\n\n      return formattedText;\n    }, ErrorTypes.FORMATTING, { formatType, textLength: text?.length });\n  }\n\n  /**\n   * Supprime tous les formatages d'un texte\n   * @param {string} text - Le texte à nettoyer\n   * @returns {Promise<string>} - Le texte sans formatage\n   */\n  async removeAllFormats(text) {\n    return errorHandler.safeExecute(async () => {\n      if (!text || typeof text !== 'string') {\n        return text;\n      }\n\n      return toNormal(text);\n    }, ErrorTypes.FORMATTING, { operation: 'removeAllFormats', textLength: text?.length });\n  }\n\n  /**\n   * Vérifie si un texte contient des formatages\n   * @param {string} text - Le texte à vérifier\n   * @returns {boolean} - True si le texte contient des formatages\n   */\n  hasFormats(text) {\n    return errorHandler.safeExecute(() => {\n      if (!text || typeof text !== 'string') {\n        return false;\n      }\n\n      const formats = this.detectFormats(text);\n      return formats.length > 0;\n    }, ErrorTypes.FORMATTING, { operation: 'hasFormats', textLength: text?.length }) || false;\n  }\n\n  /**\n   * Obtient les types de formatage supportés\n   * @returns {Array} - Liste des types supportés\n   */\n  getSupportedFormats() {\n    return [...this.supportedFormats];\n  }\n\n  /**\n   * Obtient les informations sur un type de formatage\n   * @param {string} formatType - Le type de formatage\n   * @returns {Object} - Informations sur le formatage\n   */\n  getFormatInfo(formatType) {\n    return CONFIG.formats.definitions[formatType] || null;\n  }\n\n  /**\n   * Prévisualise un formatage sans l'appliquer\n   * @param {string} text - Le texte à prévisualiser\n   * @param {string} formatType - Le type de formatage\n   * @returns {Promise<Object>} - Informations de prévisualisation\n   */\n  async previewFormat(text, formatType) {\n    return errorHandler.safeExecute(async () => {\n      this.validateFormatRequest(text, formatType);\n\n      const existingFormats = this.detectFormats(text);\n      const formattedText = await this.formatText(text, formatType, existingFormats);\n\n      return {\n        original: text,\n        formatted: formattedText,\n        formatType,\n        existingFormats,\n        hasChanges: text !== formattedText\n      };\n    }, ErrorTypes.FORMATTING, { operation: 'preview', formatType, textLength: text?.length });\n  }\n}\n\n// Instance globale\nexport const textFormatter = new TextFormatter();","// LinkedIn Formateur Toolbox - Format Orchestrator\n// Classe d'orchestration pour coordonner le formatage\n\nimport { CONFIG, log } from '../../config/index.js';\nimport { errorHandler, ExtensionError, ErrorTypes, ErrorSeverity } from '../utils/error-handler.js';\nimport { textFormatter } from '../formatters/text-formatter.js';\nimport { uiManager } from '../ui/ui-manager.js';\n\n/**\n * Classe d'orchestration pour le formatage\n * Responsabilité: Coordonner les différents composants pour le formatage\n */\nexport class FormatOrchestrator {\n  constructor() {\n    this.activeOperations = new Map();\n    this.operationCounter = 0;\n    this.statistics = {\n      totalOperations: 0,\n      successfulOperations: 0,\n      failedOperations: 0,\n      averageProcessingTime: 0\n    };\n  }\n\n  /**\n   * Orchestre une opération de formatage complète\n   * @param {Object} request - Requête de formatage\n   * @returns {Promise<Object>} - Résultat de l'opération\n   */\n  async orchestrateFormatting(request) {\n    const operationId = this.generateOperationId();\n    const startTime = Date.now();\n\n    return errorHandler.safeExecute(async () => {\n      // Valider la requête\n      this.validateFormatRequest(request);\n\n      // Enregistrer l'opération\n      this.registerOperation(operationId, request);\n\n      log('info', 'Starting format orchestration', {\n        operationId,\n        formatType: request.formatType,\n        textLength: request.selectionData.text.length\n      });\n\n      // Étape 1: Analyser la sélection\n      const analysisResult = await this.analyzeSelection(request.selectionData);\n\n      // Étape 2: Préparer le formatage\n      const formatPreparation = await this.prepareFormatting(\n        request.selectionData,\n        request.formatType,\n        analysisResult\n      );\n\n      // Étape 3: Appliquer le formatage\n      const formatResult = await this.applyFormatting(\n        formatPreparation,\n        request.formatType\n      );\n\n      // Étape 4: Appliquer le changement dans l'UI\n      const uiResult = await this.applyUIChanges(\n        request.selectionData,\n        formatResult\n      );\n\n      // Étape 5: Finaliser\n      const finalResult = await this.finalizeOperation(\n        operationId,\n        uiResult,\n        startTime\n      );\n\n      this.updateStatistics(true, Date.now() - startTime);\n      return finalResult;\n\n    }, ErrorTypes.FORMATTING, { operationId, formatType: request.formatType });\n  }\n\n  /**\n   * Valide une requête de formatage\n   * @param {Object} request - La requête à valider\n   */\n  validateFormatRequest(request) {\n    if (!request) {\n      throw new ExtensionError(\n        'Format request is required',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.HIGH,\n        { request }\n      );\n    }\n\n    if (!request.selectionData) {\n      throw new ExtensionError(\n        'Selection data is required',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.HIGH,\n        { request: Object.keys(request) }\n      );\n    }\n\n    if (!request.formatType) {\n      throw new ExtensionError(\n        'Format type is required',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.HIGH,\n        { request: Object.keys(request) }\n      );\n    }\n\n    if (!request.selectionData.text) {\n      throw new ExtensionError(\n        'No text selected for formatting',\n        ErrorTypes.FORMATTING,\n        ErrorSeverity.MEDIUM,\n        { formatType: request.formatType }\n      );\n    }\n  }\n\n  /**\n   * Génère un ID unique pour l'opération\n   * @returns {string} - ID unique\n   */\n  generateOperationId() {\n    return `format_${++this.operationCounter}_${Date.now()}`;\n  }\n\n  /**\n   * Enregistre une opération\n   * @param {string} operationId - ID de l'opération\n   * @param {Object} request - Requête de formatage\n   */\n  registerOperation(operationId, request) {\n    this.activeOperations.set(operationId, {\n      id: operationId,\n      startTime: Date.now(),\n      formatType: request.formatType,\n      textLength: request.selectionData.text.length,\n      status: 'started'\n    });\n  }\n\n  /**\n   * Analyse la sélection pour préparer le formatage\n   * @param {Object} selectionData - Données de la sélection\n   * @returns {Promise<Object>} - Résultat de l'analyse\n   */\n  async analyzeSelection(selectionData) {\n    return errorHandler.safeExecute(async () => {\n      const text = selectionData.text;\n      const existingFormats = selectionData.existingFormats || \n                            textFormatter.detectFormats(text);\n\n      const analysis = {\n        text,\n        length: text.length,\n        existingFormats,\n        hasFormats: existingFormats.length > 0,\n        field: selectionData.field,\n        fieldType: selectionData.fieldInfo?.tagName,\n        isContentEditable: selectionData.field?.contentEditable === 'true'\n      };\n\n      log('debug', 'Selection analysis completed', analysis);\n      return analysis;\n    }, ErrorTypes.FORMATTING, { operation: 'analyze' });\n  }\n\n  /**\n   * Prépare le formatage\n   * @param {Object} selectionData - Données de la sélection\n   * @param {string} formatType - Type de formatage\n   * @param {Object} analysisResult - Résultat de l'analyse\n   * @returns {Promise<Object>} - Préparation du formatage\n   */\n  async prepareFormatting(selectionData, formatType, analysisResult) {\n    return errorHandler.safeExecute(async () => {\n      // Vérifier les conflits potentiels\n      const conflicts = this.checkFormatConflicts(\n        analysisResult.existingFormats,\n        formatType\n      );\n\n      // Préparer la stratégie de formatage\n      const strategy = this.determineFormatStrategy(\n        formatType,\n        analysisResult.existingFormats,\n        conflicts\n      );\n\n      const preparation = {\n        text: analysisResult.text,\n        formatType,\n        existingFormats: analysisResult.existingFormats,\n        strategy,\n        conflicts,\n        field: selectionData.field,\n        range: selectionData.range\n      };\n\n      log('debug', 'Formatting preparation completed', {\n        formatType,\n        strategy,\n        conflicts: conflicts.length\n      });\n\n      return preparation;\n    }, ErrorTypes.FORMATTING, { operation: 'prepare', formatType });\n  }\n\n  /**\n   * Vérifie les conflits de formatage\n   * @param {Array} existingFormats - Formatages existants\n   * @param {string} newFormatType - Nouveau type de formatage\n   * @returns {Array} - Conflits trouvés\n   */\n  checkFormatConflicts(existingFormats, newFormatType) {\n    const conflicts = [];\n\n    existingFormats.forEach(format => {\n      if (format === newFormatType) {\n        conflicts.push({\n          type: 'duplicate',\n          format: format,\n          message: `Format ${format} already applied`\n        });\n      }\n    });\n\n    return conflicts;\n  }\n\n  /**\n   * Détermine la stratégie de formatage\n   * @param {string} formatType - Type de formatage\n   * @param {Array} existingFormats - Formatages existants\n   * @param {Array} conflicts - Conflits détectés\n   * @returns {string} - Stratégie à utiliser\n   */\n  determineFormatStrategy(formatType, existingFormats, conflicts) {\n    if (conflicts.length > 0) {\n      const hasDuplicate = conflicts.some(c => c.type === 'duplicate');\n      if (hasDuplicate) {\n        return 'toggle'; // Retirer le formatage s'il existe déjà\n      }\n    }\n\n    if (existingFormats.length === 0) {\n      return 'apply'; // Appliquer directement\n    }\n\n    return 'incremental'; // Formatage incrémental\n  }\n\n  /**\n   * Applique le formatage\n   * @param {Object} preparation - Préparation du formatage\n   * @param {string} formatType - Type de formatage\n   * @returns {Promise<Object>} - Résultat du formatage\n   */\n  async applyFormatting(preparation, formatType) {\n    return errorHandler.safeExecute(async () => {\n      let formattedText;\n\n      switch (preparation.strategy) {\n        case 'toggle':\n          // Retirer le formatage existant\n          formattedText = await textFormatter.removeAllFormats(preparation.text);\n          break;\n\n        case 'apply':\n          // Appliquer le formatage directement\n          formattedText = await textFormatter.applySimpleFormat(\n            preparation.text,\n            formatType\n          );\n          break;\n\n        case 'incremental':\n        default:\n          // Formatage incrémental\n          formattedText = await textFormatter.formatText(\n            preparation.text,\n            formatType,\n            preparation.existingFormats\n          );\n          break;\n      }\n\n      const result = {\n        originalText: preparation.text,\n        formattedText,\n        formatType,\n        strategy: preparation.strategy,\n        hasChanges: preparation.text !== formattedText\n      };\n\n      log('debug', 'Formatting applied', {\n        formatType,\n        strategy: preparation.strategy,\n        hasChanges: result.hasChanges\n      });\n\n      return result;\n    }, ErrorTypes.FORMATTING, { operation: 'apply', formatType });\n  }\n\n  /**\n   * Applique les changements dans l'UI\n   * @param {Object} selectionData - Données de la sélection\n   * @param {Object} formatResult - Résultat du formatage\n   * @returns {Promise<Object>} - Résultat de l'application UI\n   */\n  async applyUIChanges(selectionData, formatResult) {\n    return errorHandler.safeExecute(async () => {\n      if (!formatResult.hasChanges) {\n        return {\n          success: true,\n          message: 'No changes to apply',\n          formatResult\n        };\n      }\n\n      // Appliquer le changement selon le type de champ\n      if (selectionData.field.contentEditable === 'true') {\n        await this.applyContentEditableChange(\n          selectionData.field,\n          selectionData.range,\n          formatResult.formattedText\n        );\n      } else {\n        await this.applyInputFieldChange(\n          selectionData.field,\n          formatResult.formattedText\n        );\n      }\n\n      // Déclencher les événements LinkedIn\n      await this.triggerLinkedInEvents(selectionData.field);\n\n      return {\n        success: true,\n        message: 'Changes applied successfully',\n        formatResult\n      };\n    }, ErrorTypes.UI_INTERACTION, { fieldType: selectionData.fieldInfo?.tagName });\n  }\n\n  /**\n   * Applique les changements dans un champ contenteditable\n   * @param {HTMLElement} field - Le champ\n   * @param {Range} range - La range de sélection\n   * @param {string} newText - Le nouveau texte\n   */\n  async applyContentEditableChange(field, range, newText) {\n    return errorHandler.safeExecute(async () => {\n      range.deleteContents();\n      const textNode = document.createTextNode(newText);\n      range.insertNode(textNode);\n      \n      // Repositionner le curseur\n      range.setStartAfter(textNode);\n      range.setEndAfter(textNode);\n      \n      const selection = window.getSelection();\n      selection.removeAllRanges();\n      selection.addRange(range);\n      selection.collapseToEnd();\n    }, ErrorTypes.UI_INTERACTION, { operation: 'contenteditable' });\n  }\n\n  /**\n   * Applique les changements dans un champ input/textarea\n   * @param {HTMLElement} field - Le champ\n   * @param {string} newText - Le nouveau texte\n   */\n  async applyInputFieldChange(field, newText) {\n    return errorHandler.safeExecute(async () => {\n      const start = field.selectionStart;\n      const end = field.selectionEnd;\n      const value = field.value;\n      \n      field.value = value.substring(0, start) + newText + value.substring(end);\n      \n      // Repositionner le curseur\n      const newCursorPos = start + newText.length;\n      field.setSelectionRange(newCursorPos, newCursorPos);\n    }, ErrorTypes.UI_INTERACTION, { operation: 'input' });\n  }\n\n  /**\n   * Déclenche les événements LinkedIn\n   * @param {HTMLElement} field - Le champ\n   */\n  async triggerLinkedInEvents(field) {\n    return errorHandler.safeExecute(async () => {\n      const events = CONFIG.events.linkedinNotification;\n      \n      events.forEach(eventType => {\n        const event = new Event(eventType, {\n          bubbles: true,\n          cancelable: true\n        });\n        field.dispatchEvent(event);\n      });\n\n      field.focus();\n    }, ErrorTypes.UI_INTERACTION, { operation: 'events' });\n  }\n\n  /**\n   * Finalise une opération\n   * @param {string} operationId - ID de l'opération\n   * @param {Object} uiResult - Résultat de l'application UI\n   * @param {number} startTime - Temps de début\n   * @returns {Object} - Résultat final\n   */\n  async finalizeOperation(operationId, uiResult, startTime) {\n    return errorHandler.safeExecute(async () => {\n      const operation = this.activeOperations.get(operationId);\n      if (operation) {\n        operation.status = 'completed';\n        operation.endTime = Date.now();\n        operation.duration = operation.endTime - startTime;\n      }\n\n      // Nettoyer l'opération après un délai\n      setTimeout(() => {\n        this.activeOperations.delete(operationId);\n      }, 5000);\n\n      log('info', 'Format operation completed', {\n        operationId,\n        duration: operation?.duration,\n        success: uiResult.success\n      });\n\n      return {\n        operationId,\n        success: uiResult.success,\n        message: uiResult.message,\n        duration: operation?.duration,\n        formatResult: uiResult.formatResult\n      };\n    }, ErrorTypes.FORMATTING, { operationId });\n  }\n\n  /**\n   * Met à jour les statistiques\n   * @param {boolean} success - Succès de l'opération\n   * @param {number} duration - Durée de l'opération\n   */\n  updateStatistics(success, duration) {\n    this.statistics.totalOperations++;\n    \n    if (success) {\n      this.statistics.successfulOperations++;\n    } else {\n      this.statistics.failedOperations++;\n    }\n\n    // Calcul de la moyenne mobile\n    const currentAvg = this.statistics.averageProcessingTime;\n    const newAvg = (currentAvg + duration) / 2;\n    this.statistics.averageProcessingTime = Math.round(newAvg);\n  }\n\n  /**\n   * Obtient les statistiques\n   * @returns {Object} - Statistiques de l'orchestrateur\n   */\n  getStatistics() {\n    return {\n      ...this.statistics,\n      activeOperations: this.activeOperations.size,\n      successRate: this.statistics.totalOperations > 0 \n        ? (this.statistics.successfulOperations / this.statistics.totalOperations * 100).toFixed(2)\n        : 0\n    };\n  }\n\n  /**\n   * Obtient les opérations actives\n   * @returns {Array} - Liste des opérations actives\n   */\n  getActiveOperations() {\n    return Array.from(this.activeOperations.values());\n  }\n\n  /**\n   * Nettoie les ressources\n   */\n  cleanup() {\n    this.activeOperations.clear();\n    this.statistics = {\n      totalOperations: 0,\n      successfulOperations: 0,\n      failedOperations: 0,\n      averageProcessingTime: 0\n    };\n    log('info', 'Format orchestrator cleaned up');\n  }\n}\n\n// Instance globale\nexport const formatOrchestrator = new FormatOrchestrator();","// LinkedIn Formateur Toolbox - Format Handler\n// Gestionnaire spécialisé pour l'application du formatage\n\nimport { CONFIG, log } from '../config/index.js';\nimport { toBold, toItalic, toUnderline, toStrikethrough, toNormal, detectFormatting, applyIncrementalFormatting } from './unicode-formatters.js';\nimport { errorHandler, ExtensionError, ErrorTypes, ErrorSeverity } from './utils/error-handler.js';\nimport { formatOrchestrator } from './orchestrators/format-orchestrator.js';\n\n/**\n * Classe spécialisée pour la gestion du formatage\n */\nclass FormatHandler {\n  constructor() {\n    this.activeFormats = new Map();\n  }\n\n  /**\n   * Applique le formatage au texte sélectionné\n   */\n  async applyFormatting(selectionData, formatType) {\n    return errorHandler.safeExecute(async () => {\n      // Valider les paramètres\n      if (!selectionData || !formatType) {\n        throw new ExtensionError(\n          'Invalid parameters for formatting',\n          ErrorTypes.FORMATTING,\n          ErrorSeverity.MEDIUM,\n          { selectionData: !!selectionData, formatType }\n        );\n      }\n\n      if (!selectionData.text || selectionData.text.length === 0) {\n        throw new ExtensionError(\n          'No text selected for formatting',\n          ErrorTypes.FORMATTING,\n          ErrorSeverity.LOW,\n          { formatType }\n        );\n      }\n\n      log('info', 'Delegating formatting to orchestrator', { \n        formatType, \n        textLength: selectionData.text.length\n      });\n      \n      // Utiliser l'orchestrateur pour gérer le formatage complet\n      const result = await formatOrchestrator.orchestrateFormatting({\n        selectionData,\n        formatType\n      });\n\n      return result.success;\n\n    }, ErrorTypes.FORMATTING, { formatType, textLength: selectionData?.text?.length });\n  }\n\n  /**\n   * Remplace le texte sélectionné dans le champ LinkedIn\n   */\n  async replaceSelectedText(selectionData, newText) {\n    return errorHandler.safeExecute(async () => {\n      const field = selectionData.field;\n      const range = selectionData.range;\n\n      if (!field) {\n        throw new ExtensionError(\n          'No field found for text replacement',\n          ErrorTypes.TEXT_REPLACEMENT,\n          ErrorSeverity.HIGH,\n          { newText: newText.substring(0, 50) }\n        );\n      }\n\n      // Méthode 1: Pour les éléments contenteditable (posts, commentaires)\n      if (field.contentEditable === 'true') {\n        await this.handleContentEditableField(field, range, newText);\n      // Méthode 2: Pour les textarea et input\n      } else if (field.tagName === 'TEXTAREA' || field.tagName === 'INPUT') {\n        await this.handleInputField(field, newText);\n      } else {\n        throw new ExtensionError(\n          'Unsupported field type for text replacement',\n          ErrorTypes.TEXT_REPLACEMENT,\n          ErrorSeverity.MEDIUM,\n          { fieldType: field.tagName, fieldId: field.id }\n        );\n      }\n\n    }, ErrorTypes.TEXT_REPLACEMENT, { fieldType: selectionData.field?.tagName });\n  }\n\n  /**\n   * Gère les champs contenteditable\n   */\n  async handleContentEditableField(field, range, newText) {\n    return errorHandler.safeExecute(async () => {\n      if (!range) {\n        throw new ExtensionError(\n          'No range provided for contenteditable field',\n          ErrorTypes.TEXT_REPLACEMENT,\n          ErrorSeverity.HIGH,\n          { fieldId: field.id }\n        );\n      }\n\n      // Supprimer le contenu sélectionné et insérer le nouveau texte\n      range.deleteContents();\n      const textNode = document.createTextNode(newText);\n      range.insertNode(textNode);\n      \n      // Repositionner le curseur après le texte inséré\n      range.setStartAfter(textNode);\n      range.setEndAfter(textNode);\n      \n      // Effacer la sélection\n      window.getSelection().removeAllRanges();\n      window.getSelection().addRange(range);\n      window.getSelection().collapseToEnd();\n\n      // Déclencher les événements pour notifier LinkedIn\n      await this.triggerLinkedInEvents(field);\n\n    }, ErrorTypes.TEXT_REPLACEMENT, { fieldType: 'contenteditable', fieldId: field.id });\n  }\n\n  /**\n   * Gère les champs input/textarea\n   */\n  async handleInputField(field, newText) {\n    return errorHandler.safeExecute(async () => {\n      const start = field.selectionStart;\n      const end = field.selectionEnd;\n      const value = field.value;\n      \n      if (start === null || end === null) {\n        throw new ExtensionError(\n          'No selection found in input field',\n          ErrorTypes.TEXT_REPLACEMENT,\n          ErrorSeverity.MEDIUM,\n          { fieldId: field.id, fieldType: field.tagName }\n        );\n      }\n      \n      // Remplacer le texte sélectionné\n      field.value = value.substring(0, start) + newText + value.substring(end);\n      \n      // Repositionner le curseur\n      const newCursorPos = start + newText.length;\n      field.setSelectionRange(newCursorPos, newCursorPos);\n      \n      // Déclencher les événements\n      await this.triggerLinkedInEvents(field);\n\n    }, ErrorTypes.TEXT_REPLACEMENT, { fieldType: field.tagName, fieldId: field.id });\n  }\n\n  /**\n   * Déclenche les événements nécessaires pour notifier LinkedIn des changements\n   */\n  async triggerLinkedInEvents(field) {\n    return errorHandler.safeExecute(async () => {\n      // Événements de base pour notifier les changements\n      const events = CONFIG.events.linkedinNotification;\n      \n      events.forEach(eventType => {\n        try {\n          const event = new Event(eventType, {\n            bubbles: true,\n            cancelable: true\n          });\n          field.dispatchEvent(event);\n        } catch (error) {\n          throw new ExtensionError(\n            `Failed to dispatch event: ${eventType}`,\n            ErrorTypes.UI_INTERACTION,\n            ErrorSeverity.LOW,\n            { eventType, fieldId: field.id, error: error.message }\n          );\n        }\n      });\n\n      // Focus sur le champ pour maintenir l'état actif\n      try {\n        field.focus();\n      } catch (error) {\n        throw new ExtensionError(\n          'Failed to focus field after text replacement',\n          ErrorTypes.UI_INTERACTION,\n          ErrorSeverity.LOW,\n          { fieldId: field.id, error: error.message }\n        );\n      }\n\n    }, ErrorTypes.UI_INTERACTION, { fieldId: field.id });\n  }\n\n  /**\n   * Détecte les formatages existants dans le texte\n   */\n  detectExistingFormats(text) {\n    return detectFormatting(text);\n  }\n}\n\n// Exporter la classe et créer une instance globale\nexport { FormatHandler };\n\n// Instance globale pour l'extension\nexport const formatHandler = new FormatHandler();","// LinkedIn Formateur Toolbox - Content Script\n// Ce script sera injecté sur toutes les pages LinkedIn\n\nimport { CONFIG, isDomainAllowed, log } from '../config/index.js';\nimport { selectionDetector } from './selection-detector.js';\nimport { toolboxUI } from './toolbox.js';\nimport { formatHandler } from './format-handler.js';\nimport { detectFormatting } from './unicode-formatters.js';\nimport { errorHandler, ExtensionError, ErrorTypes, ErrorSeverity } from './utils/error-handler.js';\n\n\n/**\n * Classe principale de l'extension\n */\nclass LinkedInFormatterToolbox {\n  constructor() {\n    this.isInitialized = false;\n    this.currentSelection = null;\n    \n    // Bind methods\n    this.handleSelectionEvent = this.handleSelectionEvent.bind(this);\n  }\n\n  /**\n   * Initialise l'extension\n   */\n  async init() {\n    if (this.isInitialized) {\n      return;\n    }\n\n    return errorHandler.safeExecute(async () => {\n      log('info', 'Initializing LinkedIn Formatter Toolbox');\n      \n      // Vérifier qu'on est bien sur LinkedIn\n      if (!this.isLinkedInPage()) {\n        throw new ExtensionError(\n          'Not on LinkedIn page, skipping initialization',\n          ErrorTypes.INITIALIZATION,\n          ErrorSeverity.LOW,\n          { hostname: window.location.hostname }\n        );\n      }\n\n      // Initialiser le détecteur de sélection\n      selectionDetector.init();\n      \n      // Ajouter notre handler pour les événements de sélection\n      selectionDetector.addSelectionHandler(this.handleSelectionEvent);\n\n      // Enregistrer les handlers de formatage\n      this.registerFormatHandlers();\n\n      this.isInitialized = true;\n      log('info', 'LinkedIn Formatter Toolbox initialized successfully');\n\n    }, ErrorTypes.INITIALIZATION, { hostname: window.location.hostname });\n  }\n\n  /**\n   * Vérifie si on est sur une page LinkedIn\n   */\n  isLinkedInPage() {\n    const hostname = window.location.hostname;\n    const isAllowed = isDomainAllowed(hostname);\n    log('debug', 'Checking LinkedIn page', { hostname, isAllowed });\n    return isAllowed;\n  }\n\n  /**\n   * Gère les événements de sélection/désélection\n   */\n  handleSelectionEvent(type, data) {\n    if (type === 'selection') {\n      this.onTextSelected(data);\n    } else if (type === 'deselection') {\n      this.onTextDeselected(data);\n    }\n  }\n\n  /**\n   * Appelé quand du texte est sélectionné\n   */\n  onTextSelected(selectionData) {\n    this.currentSelection = selectionData;\n    \n    log('info', 'Text selected', { \n      length: selectionData.text.length,\n      fieldType: selectionData.fieldInfo.tagName\n    });\n    \n    // LIN-33: Détecter les formatages existants\n    const existingFormats = detectFormatting(selectionData.text);\n\n    // Enrichir les données de sélection avec les formatages détectés\n    selectionData.existingFormats = existingFormats;\n\n    // Afficher la toolbox\n    this.showToolbox(selectionData);\n  }\n\n  /**\n   * Appelé quand la sélection est effacée\n   */\n  onTextDeselected(data) {\n    this.currentSelection = null;\n\n    log('info', 'Text deselected');\n    \n    // Masquer la toolbox\n    this.hideToolbox();\n  }\n\n  /**\n   * Affiche la toolbox de formatage\n   */\n  showToolbox(selectionData) {\n    toolboxUI.show(selectionData);\n  }\n\n  /**\n   * Masque la toolbox de formatage\n   */\n  hideToolbox() {\n    toolboxUI.hide();\n  }\n\n\n  /**\n   * Enregistre les handlers de formatage\n   */\n  registerFormatHandlers() {\n    const supportedFormats = CONFIG.formats.supported;\n    \n    log('info', 'Registering format handlers', { formats: supportedFormats });\n    \n    // Enregistrer un handler pour chaque format supporté\n    supportedFormats.forEach(formatType => {\n      toolboxUI.addFormatHandler(formatType, (selectionData, formatType) => {\n        this.applyFormatting(selectionData, formatType);\n      });\n    });\n  }\n\n  /**\n   * Applique le formatage au texte sélectionné\n   */\n  async applyFormatting(selectionData, formatType) {\n    return errorHandler.safeExecute(async () => {\n      if (!selectionData || !formatType) {\n        throw new ExtensionError(\n          'Invalid parameters for applyFormatting',\n          ErrorTypes.FORMATTING,\n          ErrorSeverity.MEDIUM,\n          { hasSelectionData: !!selectionData, formatType }\n        );\n      }\n\n      return await formatHandler.applyFormatting(selectionData, formatType);\n    }, ErrorTypes.FORMATTING, { formatType });\n  }\n\n  /**\n   * Obtient la sélection actuelle\n   */\n  getCurrentSelection() {\n    return this.currentSelection;\n  }\n\n  /**\n   * Nettoie l'extension\n   */\n  destroy() {\n    if (!this.isInitialized) return;\n\n    log('info', 'Destroying LinkedIn Formatter Toolbox');\n\n    // Nettoyer le détecteur de sélection\n    selectionDetector.removeSelectionHandler(this.handleSelectionEvent);\n    selectionDetector.destroy();\n\n    // Nettoyer la toolbox\n    toolboxUI.destroy();\n\n    this.currentSelection = null;\n    this.isInitialized = false;\n    \n    log('info', 'LinkedIn Formatter Toolbox destroyed');\n  }\n}\n\n// Initialisation automatique\nconst toolbox = new LinkedInFormatterToolbox();\n\n// Exposer globalement pour l'extension\nwindow.linkedInFormatterToolbox = toolbox;\n\n// Initialiser quand le DOM est prêt\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => toolbox.init());\n} else {\n  // DOM déjà prêt\n  toolbox.init();\n}\n\n// Pour LinkedIn SPA, réinitialiser lors des changements de page\nlet currentUrl = window.location.href;\nconst observer = new MutationObserver(() => {\n  if (window.location.href !== currentUrl) {\n    currentUrl = window.location.href;\n    \n    // Délai pour laisser LinkedIn finir de charger\n    setTimeout(() => {\n      toolbox.destroy();\n      toolbox.init();\n    }, CONFIG.performance.cleanupInterval / 30); // 1 seconde par défaut\n  }\n});\n\nobserver.observe(document.body, {\n  childList: true,\n  subtree: true\n});\n\n// Export pour les tests\nexport { LinkedInFormatterToolbox, toolbox };"],"names":[],"mappings":"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"}